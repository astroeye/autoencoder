DEBUG:matplotlib:matplotlib data path: C:\Users\astro\anaconda3\envs\ae2\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:CONFIGDIR=C:\Users\astro\.matplotlib
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is win32
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'math', 'select', 'selectors', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'posixpath', 'fnmatch', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', '_queue', 'queue', 'platform', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', '__future__', 'tornado', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'numbers', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'getpass', 'jupyter_client.clientabc', 'glob', 'jupyter_core.version', 'jupyter_core', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', '_uuid', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'executing.executing', 'executing.version', 'executing', 'asttokens.line_numbers', 'asttokens.util', 'asttokens.mark_tokens', 'asttokens.asttokens', 'asttokens', 'fractions', 'pure_eval.utils', 'pure_eval.my_getattr_static', 'pure_eval.core', 'pure_eval.version', 'pure_eval', 'stack_data.utils', 'stack_data.core', 'stack_data.formatting', 'stack_data.version', 'stack_data', 'pygments', 'pygments.formatters._mapping', 'pygments.plugin', 'pygments.util', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.console', 'pygments.token', 'pygments.style', 'pygments.formatters.terminal256', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'IPython.core.display_functions', 'mimetypes', 'IPython.testing', 'IPython.testing.skipdoctest', 'IPython.core.display', 'IPython.lib', 'IPython.lib.display', 'IPython.display', 'IPython.utils.data', 'IPython.core.page', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.lexers', 'pygments.filter', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'pickleshare', 'IPython.core.hooks', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.displayhook', 'IPython.core.displaypub', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.extensions', 'decorator', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.cursor_shapes', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.flush_stdout', 'prompt_toolkit.output.plain_text', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.utils.contexts', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'timeit', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'imp', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_bundle', 'xmlrpc', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_bundle._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_bundle._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', '_pydevd_bundle.pydevd_concurrency_analyser', '_pydevd_bundle.pydevd_concurrency_analyser.pydevd_thread_wrappers', '_pydevd_bundle.pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.pydevd_line_validation', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugin_pandas_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'pygments.styles.default', 'encodings.cp437', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'librosa.version', 'joblib.hashing', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', 'multiprocessing.util', 'joblib.disk', 'joblib.logger', 'joblib.func_inspect', 'joblib.backports', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.numpy_pickle', 'joblib._store_backends', 'joblib.memory', '_multiprocessing', 'joblib._multiprocessing_helpers', 'joblib._deprecated_my_exceptions', 'joblib.my_exceptions', 'mmap', 'joblib.externals', 'joblib.externals.loky._base', 'multiprocessing.spawn', 'multiprocessing.popen_spawn_win32', 'multiprocessing.connection', 'joblib.externals.loky.backend.compat_win32', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.context', 'multiprocessing.synchronize', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend._win_reduction', 'joblib.externals.cloudpickle.compat', 'typing_extensions', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle_fast', 'joblib.externals.cloudpickle', 'joblib.externals.loky.backend.reduction', 'multiprocessing.queues', 'joblib.externals.loky.backend.queues', 'joblib.externals.loky.backend.utils', 'joblib.externals.loky.initializers', 'concurrent.futures.process', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky', 'joblib.externals.loky.backend.spawn', 'joblib.externals.loky.backend.resource_tracker', 'joblib._memmapping_reducer', 'multiprocessing.pool', 'joblib.pool', 'joblib.executor', 'joblib._parallel_backends', 'joblib.parallel', 'joblib', 'librosa._cache', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage._filters', 'scipy.ndimage._fourier', 'scipy.special._sf_error', '_cython_0_29_25', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special._specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg._misc', 'scipy.linalg._cythonized_array_utils', 'scipy.linalg._flinalg', 'scipy.linalg._flinalg_py', 'scipy.linalg._decomp', 'scipy.linalg._decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg._basic', 'scipy.linalg._decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg._decomp_cholesky', 'scipy.linalg._decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg._decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg._special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse._sputils', 'scipy.sparse._base', 'scipy.sparse._sparsetools', 'scipy.sparse._data', 'scipy.sparse._index', 'scipy.sparse._compressed', 'scipy.sparse._csr', 'scipy.sparse._csc', 'scipy.sparse._csparsetools', 'scipy.sparse._lil', 'scipy.sparse._dok', 'scipy.sparse._coo', 'scipy.sparse._dia', 'scipy.sparse._bsr', 'scipy.sparse._construct', 'scipy.sparse._extract', 'scipy.sparse._matrix_io', 'scipy.sparse._arrays', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse.base', 'scipy.sparse.bsr', 'scipy.sparse.compressed', 'scipy.sparse.construct', 'scipy.sparse.coo', 'scipy.sparse.csc', 'scipy.sparse.csr', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse.dok', 'scipy.sparse.extract', 'scipy.sparse.lil', 'scipy.sparse.sparsetools', 'scipy.sparse.sputils', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg.decomp', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_lu', 'scipy.linalg.decomp_qr', 'scipy.linalg.decomp_svd', 'scipy.linalg.decomp_schur', 'scipy.linalg.basic', 'scipy.linalg.misc', 'scipy.linalg.special_matrices', 'scipy.linalg.flinalg', 'scipy.linalg.matfuncs', 'scipy.linalg', 'scipy.special._orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special._spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special._add_newdocs', 'scipy.special.add_newdocs', 'scipy.special.basic', 'scipy.special.orthogonal', 'scipy.special.specfun', 'scipy.special.sf_error', 'scipy.special.spfun_stats', 'scipy.special', 'scipy.ndimage._interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage._morphology', 'scipy.ndimage._measurements', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage.morphology', 'scipy.ndimage', 'numba._version', 'numba.misc', 'numba.misc.init_utils', 'numba.core', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'llvmlite._version', 'llvmlite', 'llvmlite.binding.common', 'llvmlite.utils', 'llvmlite.binding.ffi', 'llvmlite.binding.dylib', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.executionengine', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.module', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.ir._utils', 'llvmlite.ir.types', 'llvmlite.ir.values', 'llvmlite.ir.context', 'llvmlite.ir.module', 'llvmlite.ir.instructions', 'llvmlite.ir.builder', 'llvmlite.ir.transforms', 'llvmlite.ir', 'llvmlite.binding.analysis', 'llvmlite.binding', 'numba.core.config', 'numba.core.utils', 'numba.core.types.abstract', 'numba.core.errors', 'numba.core.types.common', 'numba.core.typeconv.castgraph', 'numba.core.typeconv', 'numba.core.consts', 'numba.core.ir', 'numba.core.types.misc', 'numba.core.types.containers', 'numba.core.types.functions', 'numba.core.types.iterators', 'numba.core.types.npytypes', 'numba.np', 'numba.np.npdatetime_helpers', 'numba.core.types.scalars', 'numba.core.types.function_type', 'numba.core.types', 'numba.core.typeconv._typeconv', 'numba.core.typeconv.typeconv', 'numba.core.typeconv.rules', 'numba.core.targetconfig', 'numba.core.cpu_options', 'numba.core.typing.templates', 'numba.core.datamodel.manager', 'numba.core.datamodel.packer', 'numba.core.datamodel.registry', 'numba.core.datamodel.models', 'numba.core.datamodel', 'numba.core.debuginfo', 'numba.core.cgutils', 'numba.np.numpy_support', 'numba.core.typing.typeof', 'numba.core.typing.context', 'numba.core.typing', 'numba.core.typing.asnumbatype', 'numba.misc.special', 'numba.stencils', 'numba.core.imputils', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._helperlib', 'numba.core.itanium_mangler', 'numba.core.funcdesc', 'numba.core.generators', 'numba.core.removerefctpass', 'numba._dynfunc', 'numba.core.environment', 'numba.core.controlflow', 'numba.core.analysis', 'numba.core.lowering', 'numba.cloudpickle.compat', 'numba.cloudpickle.cloudpickle', 'numba.cloudpickle.cloudpickle_fast', 'numba.cloudpickle', 'numba.core.serialize', 'numba.core.pythonapi', 'numba.core.extending', 'numba.core.transforms', 'numba.core.postproc', 'numba.core.rewrites.registry', 'numba.core.rewrites.static_getitem', 'numba.core.rewrites.static_raise', 'numba.core.rewrites.static_binop', 'numba.core.rewrites.ir_print', 'numba.core.rewrites', 'numba.core.ir_utils', 'numba.core.descriptors', 'numba._devicearray', 'numba._dispatcher', 'numba.core.tracing', 'numba.core.dataflow', 'numba.core.byteflow', 'numba.core.unsafe', 'numba.core.unsafe.eh', 'numba.cpython', 'numba.cpython.unsafe', 'numba.cpython.unsafe.tuple', 'numba.core.interpreter', 'numba.core.bytecode', 'numba.core.event', 'numba.core.compiler_lock', 'numba.core.typeinfer', 'numba.stencils.stencilparfor', 'numba.core.overload_glue', 'numba.core.typing.npydecl', 'numba.np.unsafe', 'numba.np.unsafe.ndarray', 'numba.parfors.array_analysis', 'numba.parfors.parfor', 'numba.core.sigutils', 'numba.parfors.parfor_lowering_utils', 'numba.parfors.parfor_lowering', 'numba.parfors', 'numba.core.typing.builtins', 'numba.extending', 'numba.cpython.builtins', 'numba.core.base', 'numba.core.callconv', 'numba.core.callwrapper', 'llvmlite.llvmpy.passes', 'numba.core.runtime.nrtdynmod', 'numba.core.runtime._nrt_python', 'numba.core.runtime.nrt', 'numba.core.runtime', 'numba.core.runtime.nrtopt', 'numba.misc.inspection', 'numba.misc.llvm_pass_timings', 'numba.core.codegen', 'numba.core.intrinsics', 'numba.core.externals', 'numba.core.fastmathpass', 'numba.core.options', 'numba.core.entrypoints', 'numba.np.ufunc_db', 'numba.core.cpu', 'numba.core.compiler_machinery', 'numba.core.ssa', 'numba.core.untyped_passes', 'numba.core.annotations', 'numba.core.annotations.type_annotations', 'numba.core.typed_passes', 'numba.core.pylowering', 'numba.core.object_mode_passes', 'numba.core.compiler', 'numba.misc.appdirs', 'numba.core.caching', 'numba.core.retarget', 'numba.core.dispatcher', 'numba.core.registry', 'numba.stencils.stencil', 'numba.core.decorators', 'numba.np.ufunc._internal', 'numba.np.ufunc.wrappers', 'numba.core.target_extension', 'numba.np.ufunc.sigparse', 'numba.np.ufunc.ufuncbuilder', 'numba.np.ufunc.parallel', 'numba.np.ufunc.dufunc', 'numba.np.ufunc.gufunc', 'numba.np.ufunc.decorators', 'numba.np.ufunc.array_exprs', 'numba.np.ufunc', 'numba.experimental.jitclass.decorators', 'numba.experimental.jitclass.boxing', 'numba.experimental.jitclass', 'numba.experimental', 'numba.core.withcontexts', 'numba.typed', 'numba', 'librosa.util.exceptions', 'librosa.util.deprecation', 'librosa.util.decorators', 'librosa.util.utils', 'ftplib', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'charset_normalizer.assets', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'http.cookiejar', 'http.cookies', 'requests.compat', 'requests.exceptions', 'requests.__version__', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'requests.utils', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'pooch.hashes', 'appdirs', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'pooch.utils', 'tqdm._monitor', 'tqdm._tqdm_pandas', 'tqdm.utils', 'tqdm.std', 'tqdm._dist_ver', 'tqdm.version', 'tqdm.cli', 'tqdm.gui', 'tqdm', 'pooch.downloaders', 'pooch.core', 'tarfile', 'pooch.processors', 'pooch._version', 'pooch', 'librosa.util.files', 'librosa.util.matching', 'scipy.sparse.linalg._isolve._iterative', 'scipy.sparse.linalg._interface', 'scipy.sparse.linalg._isolve.utils', 'scipy._lib.decorator', 'scipy._lib._threadsafety', 'scipy.sparse.linalg._isolve.iterative', 'scipy.sparse.linalg._isolve.minres', 'scipy.sparse.linalg._isolve._gcrotmk', 'scipy.sparse.linalg._isolve.lgmres', 'scipy.sparse.linalg._isolve.lsqr', 'scipy.sparse.linalg._isolve.lsmr', 'scipy.sparse.linalg._isolve.tfqmr', 'scipy.sparse.linalg._isolve', 'scipy.sparse.linalg._dsolve._superlu', 'scipy.sparse.linalg._dsolve.linsolve', 'scipy.sparse.linalg._dsolve._add_newdocs', 'scipy.sparse.linalg._dsolve', 'scipy.sparse.linalg._eigen.arpack._arpack', 'scipy.sparse.linalg._eigen.arpack.arpack', 'scipy.sparse.linalg._eigen.arpack', 'scipy.sparse.linalg._eigen.lobpcg.lobpcg', 'scipy.sparse.linalg._eigen.lobpcg', 'scipy.sparse.linalg._eigen._svds', 'scipy.sparse.linalg._eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg', 'scipy.optimize._minpack2', 'scipy.optimize._linesearch', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize._optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy._lib.messagestream', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize._lbfgsb_py', '_moduleTNC', 'scipy.optimize._moduleTNC', 'scipy.optimize._tnc', 'scipy.optimize._cobyla', 'scipy.optimize._cobyla_py', 'scipy.optimize._slsqp', 'scipy.optimize._slsqp_py', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize._minpack_py', 'scipy.optimize._spectral', 'scipy.optimize._nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize._zeros_py', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.spatial._ckdtree', 'scipy.spatial._kdtree', 'scipy.spatial._qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy.spatial.qhull', 'scipy.constants._codata', 'scipy.constants._constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform._rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize.cobyla', 'scipy.optimize.lbfgsb', 'scipy.optimize.linesearch', 'scipy.optimize.minpack', 'scipy.optimize.minpack2', 'scipy.optimize.moduleTNC', 'scipy.optimize.nonlin', 'scipy.optimize.optimize', 'scipy.optimize.slsqp', 'scipy.optimize.tnc', 'scipy.optimize.zeros', 'scipy.optimize', 'librosa.util._nnls', 'librosa.util', 'librosa.core.notation', 'librosa.core.convert', 'ctypes.util', '_cffi_backend', '_soundfile', 'soundfile', 'audioread.exceptions', 'audioread.ffdec', 'audioread.version', 'audioread', 'scipy.signal._sigtools', 'scipy._lib._uarray._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray', 'scipy._lib.uarray', 'scipy.fft._basic', 'scipy.fft._realtransforms', 'scipy.fft._fftlog', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._pocketfft', 'scipy.fft._helper', 'scipy.fft._backend', 'scipy.fft', 'scipy.signal.windows._windows', 'scipy.signal.windows.windows', 'scipy.signal.windows', 'scipy.signal._waveforms', 'scipy.signal._max_len_seq_inner', 'scipy.signal._max_len_seq', 'scipy.signal._upfirdn_apply', 'scipy.signal._upfirdn', 'scipy.signal._spline', 'scipy.signal._bsplines', 'scipy.signal._filter_design', 'scipy.signal._fir_filter_design', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate._odepack_py', 'scipy.integrate._quadpack', 'scipy.integrate._quadpack_py', 'scipy.integrate._vode', 'scipy.integrate._dop', 'scipy.integrate._lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate.dop', 'scipy.integrate.lsoda', 'scipy.integrate.vode', 'scipy.integrate.odepack', 'scipy.integrate.quadpack', 'scipy.integrate', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate._fitpack_py', 'scipy.interpolate._polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate._fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate._interpolate', 'scipy.interpolate._rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate._ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate.fitpack', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpolate', 'scipy.interpolate.ndgriddata', 'scipy.interpolate.polyint', 'scipy.interpolate.rbf', 'scipy.interpolate', 'scipy.signal._lti_conversion', 'scipy.signal._ltisys', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._signaltools', 'scipy.signal._savitzky_golay', 'scipy.signal._spectral', 'scipy.signal._spectral_py', 'scipy.signal._wavelets', 'scipy.stats._distr_params', 'scipy.misc._common', 'scipy.misc.common', 'scipy.misc._doccer', 'scipy.misc.doccer', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'hypergeom_ufunc', 'scipy.stats._boost.hypergeom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats._biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats._mstats_basic', 'scipy.stats._common', 'scipy.stats._wilcoxon_data', 'scipy._lib._docscrape', 'scipy.stats._axis_nan_policy', 'scipy.stats._bootstrap', 'scipy.stats._hypotests_pythran', 'scipy.stats._hypotests', 'scipy.stats._stats_py', 'scipy.stats._variation', 'scipy.stats._statlib', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats._morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats._mvn', 'scipy.stats._kde', 'scipy.stats._mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._unuran', 'scipy.stats._unuran.unuran_wrapper', 'scipy.stats._rvs_sampling', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats.biasedurn', 'scipy.stats.kde', 'scipy.stats.morestats', 'scipy.stats.mstats_basic', 'scipy.stats.mstats_extras', 'scipy.stats.mvn', 'scipy.stats.statlib', 'scipy.stats.stats', 'scipy.stats', 'scipy.signal._peak_finding_utils', 'scipy.signal._peak_finding', 'cmath', 'scipy.signal._czt', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.lti_conversion', 'scipy.signal.ltisys', 'scipy.signal.spectral', 'scipy.signal.signaltools', 'scipy.signal.waveforms', 'scipy.signal.wavelets', 'scipy.signal.spline', 'scipy.signal', 'resampy.version', 'resampy.filters', 'resampy.interpn', 'resampy.core', 'resampy', 'librosa.core.fft', 'librosa.core.audio', 'librosa.filters', 'librosa.core.spectrum', 'librosa.sequence', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.core', 'librosa.feature.utils', 'scipy.fftpack._helper', 'scipy.fftpack._basic', 'scipy.fftpack.convolve', 'scipy.fftpack._pseudo_diffs', 'scipy.fftpack._realtransforms', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.realtransforms', 'scipy.fftpack', 'librosa.feature.spectral', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.feature', 'librosa.onset', 'librosa.beat', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build._check_build', 'sklearn.__check_build', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils._joblib', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'threadpoolctl', 'sklearn.externals', 'sklearn.externals._packaging', 'sklearn.externals._packaging._structures', 'sklearn.externals._packaging.version', 'sklearn.utils.fixes', 'sklearn.utils._estimator_html_repr', 'sklearn.utils.validation', 'sklearn.utils', 'sklearn.utils._tags', 'sklearn.base', 'sklearn.utils._openmp_helpers', 'sklearn.utils._show_versions', 'sklearn', '_cython_0_29_26', 'sklearn.decomposition._cdnmf_fast', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.extmath', 'sklearn.decomposition._nmf', 'sklearn.decomposition._base', 'sklearn.utils._arpack', 'sklearn.decomposition._pca', 'sklearn.decomposition._incremental_pca', 'sklearn.preprocessing._function_transformer', 'sklearn.utils.sparsefuncs', 'sklearn.utils._mask', 'sklearn.utils._encode', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._data', 'sklearn.utils.multiclass', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.utils.stats', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._polynomial', 'sklearn.preprocessing', 'sklearn.metrics._base', 'sklearn.metrics._ranking', 'sklearn.metrics._classification', 'sklearn.utils._typedefs', 'sklearn.utils._readonly_array_wrapper', 'sklearn.metrics._dist_metrics', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.pairwise', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics.cluster', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._regression', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.det_curve', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.metrics', 'sklearn.decomposition._kernel_pca', 'sklearn.utils._random', 'sklearn.utils._seq_dataset', 'sklearn.linear_model._base', 'sklearn.linear_model._bayes', 'sklearn.utils._cython_blas', 'sklearn.utils.arrayfuncs', 'sklearn.model_selection._split', 'sklearn.utils.metaestimators', 'sklearn.model_selection._validation', 'sklearn.utils.random', 'sklearn.model_selection._search', 'sklearn.model_selection', 'sklearn.linear_model._least_angle', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._coordinate_descent', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._glm.glm', 'sklearn.linear_model._glm', 'sklearn.linear_model._huber', 'sklearn.utils._weight_vector', 'sklearn.linear_model._sgd_fast', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._sag', 'sklearn.linear_model._ridge', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._base', 'sklearn.svm._classes', 'sklearn.svm._bounds', 'sklearn.svm', 'sklearn.linear_model._logistic', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._quantile', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.linear_model', 'sklearn.decomposition._dict_learning', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._online_lda_fast', 'sklearn.decomposition._lda', 'sklearn.decomposition', 'sklearn.neighbors._partition_nodes', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._distance_metric', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._graph', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.neighbors', 'sklearn.manifold._locally_linear', 'sklearn.utils.graph', 'sklearn.manifold._isomap', 'sklearn._isotonic', 'sklearn.isotonic', 'sklearn.manifold._mds', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._utils', 'sklearn.tree._utils', 'sklearn.tree._tree', 'sklearn.tree._splitter', 'sklearn.tree._criterion', 'sklearn.tree._classes', 'sklearn.tree._reingold_tilford', 'sklearn.tree._export', 'sklearn.tree', 'sklearn.neighbors._quad_tree', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.manifold._t_sne', 'sklearn.manifold', 'sklearn.cluster._k_means_common', 'sklearn.cluster._k_means_minibatch', 'sklearn.cluster._k_means_lloyd', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._kmeans', 'sklearn.cluster._spectral', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.utils._fast_dict', 'sklearn.cluster._hierarchical_fast', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._agglomerative', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._dbscan', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.cluster', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction._stop_words', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction', 'librosa.segment', 'librosa.decompose', 'librosa.effects', 'librosa', 'tensorflow.python.platform', 'tensorflow.python.platform.build_info', 'tensorflow.python.platform.self_check', 'tensorflow.python.pywrap_dlopen_global_flags', 'tensorflow.python._pywrap_tensorflow_internal', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.python.eager', 'absl', '_csv', 'csv', 'absl.flags._helpers', 'absl.flags._argument_parser', 'absl.flags._exceptions', 'absl._collections_abc', 'absl.flags._flag', 'absl.flags._validators_classes', 'absl.flags._flagvalues', 'absl.flags._validators', 'absl.flags._defines', 'absl.flags', 'absl.logging.converter', 'absl.logging', 'tensorflow.core', 'tensorflow.core.framework', 'google.protobuf', 'google.protobuf.internal', 'google.protobuf.internal._api_implementation', 'google.protobuf.internal.api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.descriptor', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.descriptor_pool', 'google.protobuf.pyext.cpp_message', 'google.protobuf.message_factory', 'google.protobuf.symbol_database', 'google.protobuf.reflection', 'google.protobuf.internal.well_known_types', 'tensorflow.core.framework.tensor_shape_pb2', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.full_type_pb2', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.graph_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.coordination_config_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.python._pywrap_tfe', 'tensorflow.python.pywrap_tfe', 'tensorflow.python.platform._pywrap_tf2', 'tensorflow.python.util', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.util.tf_export', 'tensorflow.python.tf2', 'tensorflow.python.client', 'tensorflow.python.client._pywrap_tf_session', 'tensorflow.python.client.pywrap_tf_session', 'tensorflow.python.eager.executor', 'tensorflow.core.framework.summary_pb2', 'tensorflow.python.framework', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.util.tf_contextlib', 'tensorflow.python.framework.c_api_util', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.device_spec', 'tensorflow.python.framework.device', 'tensorflow.python.framework.tfrt_utils', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.decorator_utils', 'tensorflow.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.util.deprecation', 'tensorflow.python.eager.context', 'tensorflow.python.data.experimental.ops', 'tensorflow.core.protobuf.data_service_pb2', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.data.util', 'wrapt._wrappers', 'wrapt.wrappers', 'wrapt.arguments', 'wrapt.decorators', 'wrapt.importer', 'wrapt', 'tensorflow.python.util._pywrap_utils', 'tensorflow.python.util._pywrap_nest', 'tensorflow.python.util.nest', 'tensorflow.python.framework.composite_tensor', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.containers', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.encoder', 'google.protobuf.internal.decoder', 'google.protobuf.internal.type_checkers', 'google.protobuf.text_format', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.protobuf.error_codes_pb2', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.python._pywrap_py_exception_registry', 'tensorflow.python.framework.errors_impl', 'tensorflow.python.framework.errors', 'tensorflow.python.eager.core', 'tensorflow.python.framework._dtypes', 'tensorflow.python.types', 'tensorflow.python.types.doc_typealias', 'tensorflow.python.lib', 'tensorflow.python.lib.core', 'tensorflow.python.lib.core._pywrap_bfloat16', 'tensorflow.python.framework.dtypes', 'absl.command_name', 'absl.app', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.eager.tape', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.types.trace', 'tensorflow.python.framework.type_spec', 'tensorflow.python.types.internal', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.profiler', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal._pywrap_traceme', 'tensorflow.python.profiler.trace', 'tensorflow.python.types.core', 'tensorflow.python.framework._pywrap_python_api_dispatcher', 'tensorflow.python.util.traceback_utils', 'tensorflow.python.util.type_annotations', 'tensorflow.python.util.dispatch', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.util._tf_stack', 'tensorflow.python.util.tf_stack', 'tensorflow.python.framework.ops', 'tensorflow.python.eager.execute', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.framework.constant_op', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework._op_def_registry', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.array_ops', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.ops.handle_data_util', 'tensorflow.python.ops.list_ops', 'tensorflow.python.framework._proto_comparators', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.framework.graph_util', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.ragged', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.framework.error_interpolation', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.client.session', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.row_partition', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.data.util.structure', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.data.experimental.ops.compression_ops', 'tensorflow.python.data.experimental.service._pywrap_server_lib', 'tensorflow.python.data.experimental.service._pywrap_utils', 'tensorflow.python.data.ops', 'tensorflow.core.framework.dataset_metadata_pb2', 'tensorflow.core.framework.model_pb2', 'tensorflow.core.framework.dataset_options_pb2', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.options', 'tensorflow.python.data.ops.options', 'google.protobuf.any_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.struct_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.meta_graph_pb2', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io._pywrap_file_io', 'tensorflow.python.lib.io.file_io', 'tensorflow.python.framework.graph_io', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.framework.auto_control_deps_utils', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.training.tracking', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.registration', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.util._pywrap_determinism', 'tensorflow.python.util._pywrap_tensor_float_32_execution', 'tensorflow.python.framework.config', 'tensorflow.python.framework.random_seed', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.ops.gen_stateless_random_ops_v2', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.framework.function', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.meta_graph', 'tensorflow.python.lib.io._pywrap_record_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.io_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.platform.gfile', 'tensorflow.python.saved_model.pywrap_saved_model.constants', 'tensorflow.python.saved_model.pywrap_saved_model.metrics', 'tensorflow.python.saved_model.pywrap_saved_model', 'tensorflow.python.training.training_util', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.util._pywrap_checkpoint_reader', 'tensorflow.python.training.py_checkpoint_reader', 'tensorflow.python.distribute', 'tensorflow.python.distribute.parallel_device', 'tensorflow.python._pywrap_parallel_device', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.parallel_device.saving', 'tensorflow.python.tpu', 'tensorflow.python.tpu.ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.distribute.parallel_device.parallel_device', 'tensorflow.python.eager.backprop_util', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.forwardprop_util', 'tensorflow.python.eager.function_trace_type', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.saved_model.save_context', 'tensorflow.python.framework.func_graph', 'tensorflow.python.eager.function_cache', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.eager.function', 'tensorflow.python.ops.op_selector', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.eager.def_function', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.training.saver', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.lib.core._pywrap_py_func', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.ops.script_ops', 'tensorflow.python.data.ops.structured_function', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.traverse', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.training.tracking.asset', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.training.tracking.data_structures', 'tensorflow.python.training.tracking.autotrackable', 'tensorflow.python.training.tracking.resource', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.data.ops.dataset_ops', 'tensorflow.python.data.experimental.ops.data_service_ops', 'tensorflow.core.protobuf.service_config_pb2', 'tensorflow.python.data.experimental.service.server_lib', 'tensorflow.python.data.experimental.service', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.ops.readers', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.io', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.client._pywrap_events_writer', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.profiler.internal._pywrap_profiler', 'tensorflow.python.eager.profiler', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.training.summary_io', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.data.experimental.ops.lookup_ops', 'opt_einsum.parser', 'opt_einsum.helpers', 'opt_einsum.blas', 'opt_einsum.paths', 'opt_einsum.path_random', 'opt_einsum.sharing', 'opt_einsum.backends.cupy', 'opt_einsum.backends.object_arrays', 'opt_einsum.backends.jax', 'opt_einsum.backends.tensorflow', 'opt_einsum.backends.theano', 'opt_einsum.backends.torch', 'opt_einsum.backends.dispatch', 'opt_einsum.backends', 'opt_einsum.contract', 'opt_einsum._version', 'opt_einsum', 'tensorflow.compiler', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.gen_special_math_ops', 'tensorflow.python.ops.special_math_ops', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.platform.device_context', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.operators.variables', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.types.distribute', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.conditional_expressions', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.pyct', 'gast.astn', 'gast.ast3', 'gast.gast', 'gast.version', 'gast', 'tensorflow.python.autograph.pyct.anno', 'astunparse.unparser', 'astunparse.printer', 'astunparse', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.parser', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.templates', 'termcolor', 'tensorflow.python.autograph.pyct.pretty_printer', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.pyct.static_analysis.reaching_fndefs', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.converters.functions', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.converters.variables', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.pyct.cache', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.error_utils', 'tensorflow.python.autograph.pyct.loader', 'tensorflow.python.autograph.pyct.naming', 'tensorflow.python.autograph.pyct.transpiler', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.parsing_config', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.experimental.ops.readers', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.snapshot', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.data.experimental', 'tensorflow.python.data', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.saved_model.constants', 'tensorflow.python.distribute.collective_util', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.packed_distributed_variable', 'tensorflow.python.saved_model.save_options', 'tensorflow.python.distribute.values_util', 'tensorflow.python.distribute.values', 'tensorflow.python.framework.immutable_dict', 'tensorflow.python.framework.extension_type_field', 'tensorflow.core.protobuf.composite_tensor_variant_pb2', 'tensorflow.python.ops.gen_composite_tensor_ops', 'tensorflow.python.ops.composite_tensor_ops', 'tensorflow.python.framework.extension_type', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.training.saving.checkpoint_options', 'tensorflow.python.training.saving.saveable_hook', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.tf2xla.python', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.numpy_ops.np_export', 'tensorflow.python.ops.numpy_ops.np_dtypes', 'tensorflow.python.ops.numpy_ops.np_arrays', 'tensorflow.python.ops.numpy_ops.np_utils', 'tensorflow.python.ops.numpy_ops.np_array_ops', 'tensorflow.python.ops.numpy_ops.np_random', 'tensorflow.python.ops.numpy_ops.np_math_ops', 'tensorflow.python.ops.numpy_ops.np_config', 'tensorflow.python.ops.numpy_ops', 'tensorflow.compiler.tf2xla.python.xla', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.compiler.xla.service', 'tensorflow.compiler.xla.service.hlo_pb2', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla.jit', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.compiler.xla.xla', 'tensorflow.python.compiler.xla', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.topology', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.tpu_name_util', 'tensorflow.python.tpu.tpu_sharding', 'tensorflow.python.tpu.tpu_feed', 'tensorflow.python.tpu.tpu', 'tensorflow.python.distribute.tpu_util', 'tensorflow.python.ops.gen_tpu_partition_ops', 'tensorflow.python.distribute.tpu_replicated_variable', 'tensorflow.python.distribute.tpu_values', 'tensorflow.python.distribute.distribute_utils', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.platform.flags', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.eager.forwardprop', 'tensorflow.python.ops.gradients', 'tensorflow.python.training.slot_creator', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.tracking.util', 'tensorflow.python.keras.distribute.sidecar_evaluator', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.backend_config', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.ops.resources', 'google.protobuf.json_format', 'tensorflow.python.summary.summary', 'tensorflow.python.training.coordinator', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.session_manager', 'tensorflow.python.training.monitored_session', 'tensorflow.core.protobuf.device_filters_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.python.training.server_lib', 'tensorflow.python.keras.distribute.distribute_coordinator_utils', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.object_identity', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_shape', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.keras.engine.keras_tensor', 'tensorflow.python.keras.utils.control_flow_util', 'tensorflow.python.keras.utils.tf_contextlib', 'tensorflow.python.keras.utils.tf_inspect', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.training.moving_averages', 'tensorflow.python.util.keras_deps', 'tensorflow.python.keras.backend', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.initializers.initializers_v1', 'tensorflow.python.keras.initializers.initializers_v2', 'tensorflow.python.keras.initializers', 'tensorflow.python.keras.regularizers', 'tensorflow.python.distribute.coordinator', 'multiprocessing.dummy.connection', 'multiprocessing.dummy', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python.client._pywrap_device_lib', 'tensorflow.python.client.device_lib', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.coordinator.coordinator_context', 'tensorflow.python.distribute.ps_values', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.framework.kernels', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.distribute.v1', 'tensorflow.python.distribute.v1.input_lib', 'tensorflow.python.distribute.input_util', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.distribute.mirrored_run', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.client', 'six.moves.urllib', 'six.moves.urllib.error', 'tensorflow.python.tpu.client.client', 'tensorflow.python.distribute.cluster_resolver.tpu.tpu_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.distribute.sharded_variable', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.eager.remote', 'tensorflow.python.distribute.parameter_server_strategy_v2', 'tensorflow.python.distribute.coordinator.metric_utils', 'tensorflow.python.distribute.coordinator.values', 'tensorflow.python.distribute.coordinator.watchdog', 'tensorflow.python.eager.cancellation', 'tensorflow.python.distribute.coordinator.cluster_coordinator', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.json_utils', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.autocast_variable', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.platform.analytics', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.python.keras.optimizer_v1', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.optimizer_v2.utils', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.ops.gen_training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.optimizers', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.loss_scale', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.tracking.base_delegate', 'tensorflow.python.keras.mixed_precision.loss_scale_optimizer', 'tensorflow.python.keras.mixed_precision.device_compatibility_check', 'tensorflow.python.keras.mixed_precision.policy', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.base_serialization', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.version_utils', 'tensorflow.python.keras.utils.io_utils', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.protobuf', 'tensorflow.python.keras.protobuf.versions_pb2', 'tensorflow.python.keras.protobuf.saved_metadata_pb2', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.saved_model.load_options', 'tensorflow.python.eager.wrap_function', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.training.tracking.trackable_utils', 'tensorflow.python.saved_model.load', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.save_impl', 'tensorflow.python.keras.saving.saved_model.layer_serialization', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.engine.training_utils', 'six.moves.urllib.request', 'tensorflow.python.keras.utils.data_utils', 'tensorflow.python.keras.utils.dataset_creator', 'tensorflow.python.keras.engine.data_adapter', 'tensorflow.python.keras.engine.base_preprocessing_layer', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.template', 'tensorflow.python.compiler.tensorrt', 'tensorflow.python.compiler.tensorrt.trt_convert_windows', 'tensorflow.python.ops.standard_ops', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.einsum_dense', 'tensorflow.python.keras.layers.multi_head_attention', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.legacy_rnn', 'tensorflow.python.keras.layers.legacy_rnn.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.saving.saved_model.metric_serialization', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.distribute.distributed_file_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.keras.distribute.worker_training_state', 'tensorflow.python.profiler.profiler_v2', 'tensorflow.python.keras.callbacks', 'tensorflow.python.keras.engine.compile_utils', 'tensorflow.python.keras.saving.model_config', 'h5py._errors', 'h5py.defs', 'h5py._objects', 'h5py.h5py_warnings', 'h5py.h5', 'h5py.version', 'h5py.h5r', 'h5py.utils', 'h5py.h5s', 'h5py.h5ac', 'h5py.h5p', 'h5py.h5t', 'h5py._conv', 'h5py.h5z', 'h5py._proxy', 'h5py.h5a', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5g', 'h5py.h5i', 'h5py.h5f', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl', 'h5py._hl.compat', 'h5py._hl.filters', 'h5py._hl.base', 'h5py.h5o', 'h5py.h5l', 'h5py._selector', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.dataset', 'h5py._hl.group', 'h5py._hl.files', 'h5py._hl.attrs', 'h5py', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.saving.saved_model.load_context', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.save', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model.model_serialization', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.saving.saved_model.network_serialization', 'tensorflow.python.keras.engine.functional', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.engine.training_utils_v1', 'tensorflow.python.keras.distribute.distributed_training_utils_v1', 'tensorflow.python.keras.engine.training_arrays_v1', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_distributed_v1', 'tensorflow.python.keras.engine.training_eager_v1', 'tensorflow.python.keras.engine.training_generator_v1', 'tensorflow.python.keras.engine.training_v1', 'tensorflow.python.keras.models', 'tensorflow.python.keras', 'tensorflow.python.keras.legacy_tf_layers', 'tensorflow.python.keras.legacy_tf_layers.variable_scope_shim', 'tensorflow.python.keras.legacy_tf_layers.base', 'tensorflow.python.layers.base', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.ops.gen_count_ops', 'tensorflow.python.ops.bincount_ops', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.ops.cond_v2', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.while_v2_indexed_slices_rewriter', 'tensorflow.python.ops.while_v2', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_addition', 'tensorflow.python.ops.linalg.linear_operator_block_lower_triangular', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_permutation', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.linalg.linear_operator_tridiag', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.sparse', 'tensorflow.python.ops.linalg.sparse.conjugate_gradient', 'tensorflow.python.ops.linalg.sparse.gen_sparse_csr_matrix_ops', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_ops', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_grad', 'tensorflow.python.ops.linalg.sparse.sparse', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_image_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_ops', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.util_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.structured', 'tensorflow.python.ops.structured.structured_tensor', 'tensorflow.python.ops.structured.structured_array_ops', 'tensorflow.python.ops.structured.structured_ops', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.util._pywrap_tfprof', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.python.profiler.profiler', 'tensorflow.python.profiler.profiler_client', 'tensorflow.python.saved_model.builder', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.method_name_updater', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.tpu.tpu_embedding_v2_utils', 'tensorflow.python.tpu.tpu_embedding_v2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.tpu.api', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.ops', 'tensorflow.python.user_ops.ops.gen_user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.ops.gen_sendrecv_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.momentum', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.layers.utils', 'tensorflow.python.training.input', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.training.warm_starting_util', 'tensorflow.core.example', 'tensorflow.core.example.feature_pb2', 'tensorflow.core.example.example_pb2', 'tensorflow.python.keras.optimizer_v2.legacy_learning_rate_decay', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.training.training', 'tensorflow.python._pywrap_quantize_training', 'tensorflow.python.training.quantize_training', 'tensorflow.python.platform.app', 'tensorflow.python.platform.resource_loader', 'absl.testing', 'absl.testing._pretty_print_reporter', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.xmlreader', 'xml.sax', 'xml.sax.saxutils', 'absl.testing.xml_reporter', 'unittest.mock', 'absl.testing.absltest', 'absl.testing._parameterized_async', 'absl.testing.parameterized', 'tensorflow.python._pywrap_sanitizers', 'tensorflow.python.pywrap_sanitizers', 'tensorflow.python.framework._test_metrics_util', 'tensorflow.python.framework.gpu_util', 'tensorflow.python.platform._pywrap_stacktrace_handler', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.platform.benchmark', 'tensorflow.python.platform.googletest', 'tensorflow.python.util._pywrap_util_port', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.framework.test_util', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.platform.test', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.keras.layers.legacy_rnn.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.debug.lib', 'tensorflow.python.debug.lib.debug_graphs', 'tensorflow.python.debug.lib.debug_data', 'tensorflow.python.debug.lib.debug_gradients', 'tensorflow.python.debug.lib.debug_utils', 'tensorflow.python.debug.wrappers', 'tensorflow.python.debug.wrappers.framework', 'tensorflow.python.debug.wrappers.dumping_wrapper', 'tensorflow.python.debug.lib.common', 'tensorflow.python.debug.wrappers.grpc_wrapper', 'tensorflow.python.debug.cli', 'tensorflow.python.debug.cli.debugger_cli_common', 'tensorflow.python.debug.cli.cli_config', 'tensorflow.python.debug.cli.command_parser', 'tensorflow.python.debug.cli.tensor_format', 'tensorflow.python.debug.cli.cli_shared', 'tensorflow.python.debug.cli.evaluator', 'tensorflow.python.debug.cli.ui_factory', 'tensorflow.python.debug.lib.profiling', 'tensorflow.python.debug.lib.source_utils', 'tensorflow.python.debug.cli.analyzer_cli', 'tensorflow.python.debug.cli.profile_analyzer_cli', 'tensorflow.python.debug.wrappers.local_cli_wrapper', 'tensorflow.python.debug.wrappers.hooks', 'tensorflow.python.debug', 'tensorflow.core.protobuf.debug_event_pb2', 'tensorflow.python.debug.lib.op_callbacks_common', 'tensorflow.python.ops.gen_debug_ops', 'tensorflow.python.debug.lib.check_numerics_callback', 'tensorflow.python.client._pywrap_debug_events_writer', 'tensorflow.python.debug.lib.debug_events_writer', 'tensorflow.python.debug.lib.dumping_callback', 'tensorflow.python.dlpack', 'tensorflow.python.dlpack.dlpack', 'tensorflow.python.compiler.mlir', 'tensorflow.python._pywrap_mlir', 'tensorflow.python.pywrap_mlir', 'tensorflow.python.compiler.mlir.mlir', 'tensorflow.python', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow._api', 'tensorflow._api.v2', 'tensorflow._api.v2.__internal__.autograph', 'tensorflow._api.v2.__internal__.decorator', 'tensorflow._api.v2.__internal__.dispatch', 'tensorflow.python.eager.test', 'tensorflow.python.distribute.multi_process_lib', 'tensorflow.python.distribute.multi_process_runner', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.distribute.multi_worker_test_base', 'tensorflow.python.framework.test_combinations', 'tensorflow.python.framework.combinations', 'tensorflow.python.distribute.combinations', 'tensorflow.python.distribute.test_util', 'tensorflow.python.distribute.strategy_combinations', 'tensorflow._api.v2.__internal__.distribute.combinations', 'tensorflow.python.distribute.merge_call_interim', 'tensorflow._api.v2.__internal__.distribute.interim', 'tensorflow._api.v2.__internal__.distribute.multi_process_runner', 'tensorflow._api.v2.__internal__.distribute', 'tensorflow._api.v2.__internal__.eager_context', 'tensorflow._api.v2.__internal__.feature_column', 'tensorflow._api.v2.__internal__.function', 'tensorflow._api.v2.__internal__.graph_util', 'tensorflow._api.v2.__internal__.mixed_precision', 'tensorflow._api.v2.__internal__.monitoring', 'tensorflow._api.v2.__internal__.nest', 'tensorflow._api.v2.__internal__.ops', 'tensorflow._api.v2.__internal__.saved_model.load', 'tensorflow._api.v2.__internal__.saved_model', 'tensorflow._api.v2.__internal__.smart_cond', 'tensorflow._api.v2.__internal__.test.combinations', 'tensorflow._api.v2.__internal__.test', 'tensorflow._api.v2.__internal__.tf2', 'tensorflow._api.v2.__internal__.tracking', 'tensorflow._api.v2.__internal__.train', 'tensorflow._api.v2.__internal__.types', 'tensorflow._api.v2.__internal__', 'tensorflow._api.v2.__operators__', 'tensorflow._api.v2.audio', 'tensorflow._api.v2.autodiff', 'tensorflow._api.v2.autograph.experimental', 'tensorflow._api.v2.autograph', 'tensorflow._api.v2.bitwise', 'tensorflow._api.v2.compat.v1.app', 'tensorflow._api.v2.compat.v1.audio', 'tensorflow._api.v2.compat.v1.autograph.experimental', 'tensorflow._api.v2.compat.v1.autograph', 'tensorflow._api.v2.compat.v1.bitwise', 'tensorflow._api.v2.compat.v1.compat.v1.compat', 'tensorflow._api.v2.compat.v1.config.experimental', 'tensorflow._api.v2.compat.v1.config.optimizer', 'tensorflow._api.v2.compat.v1.config.threading', 'tensorflow._api.v2.compat.v1.config', 'tensorflow._api.v2.compat.v1.data.experimental.service', 'tensorflow._api.v2.compat.v1.data.experimental', 'tensorflow._api.v2.compat.v1.data', 'tensorflow._api.v2.compat.v1.debugging.experimental', 'tensorflow._api.v2.compat.v1.debugging', 'tensorflow._api.v2.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v1.distribute.experimental', 'tensorflow._api.v2.compat.v1.distribute', 'tensorflow._api.v2.compat.v1.distributions', 'tensorflow._api.v2.compat.v1.dtypes', 'tensorflow._api.v2.compat.v1.errors', 'tensorflow.python.framework._pywrap_python_op_gen', 'tensorflow.python.framework.load_library', 'tensorflow._api.v2.compat.v1.experimental', 'tensorflow._api.v2.compat.v1.feature_column', 'tensorflow._api.v2.compat.v1.gfile', 'tensorflow._api.v2.compat.v1.graph_util', 'tensorflow._api.v2.compat.v1.image', 'tensorflow._api.v2.compat.v1.initializers', 'tensorflow._api.v2.compat.v1.io.gfile', 'tensorflow._api.v2.compat.v1.io', 'tensorflow._api.v2.compat.v1.layers.experimental', 'tensorflow._api.v2.compat.v1.layers', 'tensorflow._api.v2.compat.v1.linalg.experimental', 'tensorflow._api.v2.compat.v1.linalg', 'tensorflow.lite', 'tensorflow.lite.python', 'tensorflow.lite.toco', 'tensorflow.lite.toco.types_pb2', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.python.lite_constants', 'tensorflow._api.v2.compat.v1.lite.constants', 'tensorflow.lite.python.authoring', 'distutils.errors', 'distutils.debug', 'distutils.log', 'distutils.spawn', 'flatbuffers.compat', 'flatbuffers.packer', 'flatbuffers.number_types', 'flatbuffers.encode', 'flatbuffers.builder', 'flatbuffers.table', 'flatbuffers._version', 'flatbuffers.util', 'flatbuffers', 'tensorflow.lite.python.schema_py_generated', 'tensorflow.lite.python.schema_util', 'tensorflow.lite.python.tflite_keras_util', 'tensorflow.lite.python.op_hint', 'tensorflow.python.grappler', 'tensorflow.python.grappler._pywrap_tf_optimizer', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.python.grappler._pywrap_tf_cluster', 'tensorflow.python.grappler.cluster', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.lite.python.util', 'tensorflow.python._pywrap_toco_api', 'tensorflow.lite.python.wrap_toco', 'tensorflow.lite.python.metrics', 'tensorflow.lite.python.metrics.converter_error_data_pb2', 'tensorflow.lite.python.metrics.metrics_interface', 'tensorflow.lite.python.metrics.metrics', 'tensorflow.lite.python.convert_phase', 'tensorflow.lite.python.metrics.wrapper', 'tensorflow.lite.python.metrics._pywrap_tensorflow_lite_metrics_wrapper', 'tensorflow.lite.python.metrics.wrapper.metrics_wrapper', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.tools', 'tensorflow.lite.tools.flatbuffer_utils', 'tensorflow.lite.python.convert', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', 'aa8f2297d25b4dc6fd3d98411eb3ba53823c4f42', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter_wrapper', 'tensorflow.lite.python.interpreter_wrapper._pywrap_tensorflow_interpreter_wrapper', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow.lite.tools.optimize', 'tensorflow.lite.tools.optimize.debugging', 'tensorflow.lite.tools.optimize.debugging.python', 'tensorflow.lite.tools.optimize.debugging.python.debugger', 'tensorflow.lite.python.lite', 'tensorflow.lite.python.authoring.authoring', 'tensorflow._api.v2.compat.v1.lite.experimental.authoring', 'tensorflow.lite.python.analyzer_wrapper', 'tensorflow.lite.python.analyzer_wrapper._pywrap_analyzer_wrapper', 'tensorflow.lite.python.analyzer', 'tensorflow._api.v2.compat.v1.lite.experimental', 'tensorflow._api.v2.compat.v1.lite', 'tensorflow._api.v2.compat.v1.logging', 'tensorflow._api.v2.compat.v1.lookup.experimental', 'tensorflow._api.v2.compat.v1.lookup', 'tensorflow._api.v2.compat.v1.losses', 'tensorflow._api.v2.compat.v1.manip', 'tensorflow._api.v2.compat.v1.math.special', 'tensorflow._api.v2.compat.v1.math', 'tensorflow._api.v2.compat.v1.metrics', 'tensorflow._api.v2.compat.v1.mixed_precision.experimental', 'tensorflow._api.v2.compat.v1.mixed_precision', 'tensorflow._api.v2.compat.v1.mlir.experimental', 'tensorflow._api.v2.compat.v1.mlir', 'tensorflow._api.v2.compat.v1.nest', 'tensorflow._api.v2.compat.v1.nn.experimental', 'tensorflow._api.v2.compat.v1.nn.rnn_cell', 'tensorflow._api.v2.compat.v1.nn', 'tensorflow._api.v2.compat.v1.profiler', 'tensorflow._api.v2.compat.v1.python_io', 'tensorflow._api.v2.compat.v1.quantization', 'tensorflow._api.v2.compat.v1.queue', 'tensorflow._api.v2.compat.v1.ragged', 'tensorflow._api.v2.compat.v1.random.experimental', 'tensorflow._api.v2.compat.v1.random', 'tensorflow._api.v2.compat.v1.raw_ops', 'tensorflow._api.v2.compat.v1.resource_loader', 'tensorflow._api.v2.compat.v1.saved_model.builder', 'tensorflow._api.v2.compat.v1.saved_model.constants', 'tensorflow._api.v2.compat.v1.saved_model.experimental', 'tensorflow._api.v2.compat.v1.saved_model.loader', 'tensorflow._api.v2.compat.v1.saved_model.main_op', 'tensorflow._api.v2.compat.v1.saved_model.signature_constants', 'tensorflow._api.v2.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v2.compat.v1.saved_model.tag_constants', 'tensorflow._api.v2.compat.v1.saved_model.utils', 'tensorflow._api.v2.compat.v1.saved_model', 'tensorflow._api.v2.compat.v1.sets', 'tensorflow._api.v2.compat.v1.signal', 'tensorflow._api.v2.compat.v1.sparse', 'tensorflow._api.v2.compat.v1.spectral', 'tensorflow._api.v2.compat.v1.strings', 'tensorflow._api.v2.compat.v1.summary', 'tensorflow._api.v2.compat.v1.sysconfig', 'tensorflow._api.v2.compat.v1.test', 'tensorflow._api.v2.compat.v1.tpu.experimental.embedding', 'tensorflow._api.v2.compat.v1.tpu.experimental', 'tensorflow._api.v2.compat.v1.tpu', 'tensorflow._api.v2.compat.v1.train.experimental', 'tensorflow._api.v2.compat.v1.train.queue_runner', 'tensorflow._api.v2.compat.v1.train', 'tensorflow._api.v2.compat.v1.types.experimental', 'tensorflow._api.v2.compat.v1.types', 'tensorflow._api.v2.compat.v1.user_ops', 'tensorflow._api.v2.compat.v1.version', 'tensorflow._api.v2.compat.v1.xla.experimental', 'tensorflow._api.v2.compat.v1.xla', 'tensorflow._api.v2.compat.v1.compat.v1', 'tensorflow._api.v2.compat.v1.compat.v2.compat', 'tensorflow._api.v2.compat.v2.__internal__.autograph', 'tensorflow._api.v2.compat.v2.__internal__.decorator', 'tensorflow._api.v2.compat.v2.__internal__.dispatch', 'tensorflow._api.v2.compat.v2.__internal__.distribute.combinations', 'tensorflow._api.v2.compat.v2.__internal__.distribute.interim', 'tensorflow._api.v2.compat.v2.__internal__.distribute.multi_process_runner', 'tensorflow._api.v2.compat.v2.__internal__.distribute', 'tensorflow._api.v2.compat.v2.__internal__.eager_context', 'tensorflow._api.v2.compat.v2.__internal__.feature_column', 'tensorflow._api.v2.compat.v2.__internal__.function', 'tensorflow._api.v2.compat.v2.__internal__.graph_util', 'tensorflow._api.v2.compat.v2.__internal__.mixed_precision', 'tensorflow._api.v2.compat.v2.__internal__.monitoring', 'tensorflow._api.v2.compat.v2.__internal__.nest', 'tensorflow._api.v2.compat.v2.__internal__.ops', 'tensorflow._api.v2.compat.v2.__internal__.saved_model.load', 'tensorflow._api.v2.compat.v2.__internal__.saved_model', 'tensorflow._api.v2.compat.v2.__internal__.smart_cond', 'tensorflow._api.v2.compat.v2.__internal__.test.combinations', 'tensorflow._api.v2.compat.v2.__internal__.test', 'tensorflow._api.v2.compat.v2.__internal__.tf2', 'tensorflow._api.v2.compat.v2.__internal__.tracking', 'tensorflow._api.v2.compat.v2.__internal__.train', 'tensorflow._api.v2.compat.v2.__internal__.types', 'tensorflow._api.v2.compat.v2.__internal__', 'tensorflow._api.v2.compat.v2.__operators__', 'tensorflow._api.v2.compat.v2.audio', 'tensorflow._api.v2.compat.v2.autodiff', 'tensorflow._api.v2.compat.v2.autograph.experimental', 'tensorflow._api.v2.compat.v2.autograph', 'tensorflow._api.v2.compat.v2.bitwise', 'tensorflow._api.v2.compat.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v2.compat.v1', 'tensorflow._api.v2.compat.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.config.experimental', 'tensorflow._api.v2.compat.v2.config.optimizer', 'tensorflow._api.v2.compat.v2.config.threading', 'tensorflow._api.v2.compat.v2.config', 'tensorflow._api.v2.compat.v2.data.experimental.service', 'tensorflow._api.v2.compat.v2.data.experimental', 'tensorflow._api.v2.compat.v2.data', 'tensorflow._api.v2.compat.v2.debugging.experimental', 'tensorflow._api.v2.compat.v2.debugging', 'tensorflow._api.v2.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v2.distribute.coordinator', 'tensorflow._api.v2.compat.v2.distribute.experimental.coordinator', 'tensorflow._api.v2.compat.v2.distribute.experimental.partitioners', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.experimental.rpc', 'tensorflow.distribute', 'tensorflow.distribute.experimental', 'tensorflow.distribute.experimental.rpc', 'tensorflow.distribute.experimental.rpc.kernels', 'tensorflow.distribute.experimental.rpc.kernels.gen_rpc_ops', 'tensorflow.distribute.experimental.rpc.proto', 'tensorflow.distribute.experimental.rpc.proto.tf_rpc_service_pb2', 'tensorflow.python.distribute.experimental.rpc.rpc_ops', 'tensorflow._api.v2.compat.v2.distribute.experimental.rpc', 'tensorflow._api.v2.compat.v2.distribute.experimental', 'tensorflow._api.v2.compat.v2.distribute', 'tensorflow._api.v2.compat.v2.dtypes', 'tensorflow._api.v2.compat.v2.errors', 'tensorflow._api.v2.compat.v2.experimental.dlpack', 'tensorflow._api.v2.compat.v2.experimental.numpy.random', 'tensorflow._api.v2.compat.v2.experimental.numpy', 'tensorflow._api.v2.compat.v2.experimental.tensorrt', 'tensorflow._api.v2.compat.v2.experimental', 'tensorflow._api.v2.compat.v2.feature_column', 'tensorflow._api.v2.compat.v2.graph_util', 'tensorflow._api.v2.compat.v2.image', 'tensorflow._api.v2.compat.v2.io.gfile', 'tensorflow._api.v2.compat.v2.io', 'tensorflow._api.v2.compat.v2.linalg.experimental', 'tensorflow._api.v2.compat.v2.linalg', 'tensorflow._api.v2.compat.v2.lite.experimental.authoring', 'tensorflow._api.v2.compat.v2.lite.experimental', 'tensorflow._api.v2.compat.v2.lite', 'tensorflow._api.v2.compat.v2.lookup.experimental', 'tensorflow._api.v2.compat.v2.lookup', 'tensorflow._api.v2.compat.v2.math.special', 'tensorflow._api.v2.compat.v2.math', 'tensorflow._api.v2.compat.v2.mixed_precision.experimental', 'tensorflow._api.v2.compat.v2.mixed_precision', 'tensorflow._api.v2.compat.v2.mlir.experimental', 'tensorflow._api.v2.compat.v2.mlir', 'tensorflow._api.v2.compat.v2.nest', 'tensorflow._api.v2.compat.v2.nn.experimental', 'tensorflow._api.v2.compat.v2.nn', 'tensorflow._api.v2.compat.v2.profiler.experimental.client', 'tensorflow._api.v2.compat.v2.profiler.experimental.server', 'tensorflow._api.v2.compat.v2.profiler.experimental', 'tensorflow._api.v2.compat.v2.profiler', 'tensorflow._api.v2.compat.v2.quantization', 'tensorflow._api.v2.compat.v2.queue', 'tensorflow._api.v2.compat.v2.ragged', 'tensorflow._api.v2.compat.v2.random.experimental', 'tensorflow._api.v2.compat.v2.random', 'tensorflow._api.v2.compat.v2.raw_ops', 'tensorflow._api.v2.compat.v2.saved_model.experimental', 'tensorflow._api.v2.compat.v2.saved_model', 'tensorflow._api.v2.compat.v2.sets', 'tensorflow._api.v2.compat.v2.signal', 'tensorflow._api.v2.compat.v2.sparse', 'tensorflow._api.v2.compat.v2.strings', 'tensorflow._api.v2.compat.v2.summary.experimental', 'tensorflow._api.v2.compat.v2.summary', 'tensorflow._api.v2.compat.v2.sysconfig', 'tensorflow._api.v2.compat.v2.test', 'tensorflow._api.v2.compat.v2.tpu.experimental.embedding', 'tensorflow._api.v2.compat.v2.tpu.experimental', 'tensorflow._api.v2.compat.v2.tpu', 'tensorflow._api.v2.compat.v2.train.experimental', 'tensorflow._api.v2.compat.v2.train', 'tensorflow._api.v2.compat.v2.types.experimental', 'tensorflow._api.v2.compat.v2.types', 'tensorflow._api.v2.compat.v2.version', 'tensorflow._api.v2.compat.v2.xla.experimental', 'tensorflow._api.v2.compat.v2.xla', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.util', 'tensorboard.util.op_evaluator', 'tensorboard.util.encoder', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.plugins.audio.metadata', 'tensorboard.util.lazy_tensor_creator', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.plugins.audio.summary', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.metadata', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.full_type_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.coordination_config_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.compat.tensorflow_stub', 'tensorboard.util.tensor_util', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.image', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.text', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.summary_v2', 'tensorboard.plugins.text.summary', 'tensorboard.summary.v1', 'tensorboard.summary.v2', 'tensorboard.summary.writer', 'tensorboard.summary.writer.record_writer', 'tensorboard.summary.writer.event_file_writer', 'tensorboard.summary._output', 'tensorboard.summary._writer', 'tensorboard.summary', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow._api.v2.compat.v2.compat.v2', 'tensorflow._api.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2', 'tensorflow._api.v2.compat.v1.compat.v2', 'tensorflow._api.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v1', 'tensorflow._api.v2.compat', 'tensorflow._api.v2.config.experimental', 'tensorflow._api.v2.config.optimizer', 'tensorflow._api.v2.config.threading', 'tensorflow._api.v2.config', 'tensorflow._api.v2.data.experimental.service', 'tensorflow._api.v2.data.experimental', 'tensorflow._api.v2.data', 'tensorflow._api.v2.debugging.experimental', 'tensorflow._api.v2.debugging', 'tensorflow._api.v2.distribute.cluster_resolver', 'tensorflow._api.v2.distribute.coordinator', 'tensorflow._api.v2.distribute.experimental.coordinator', 'tensorflow._api.v2.distribute.experimental.partitioners', 'tensorflow._api.v2.distribute.experimental.rpc', 'tensorflow._api.v2.distribute.experimental', 'tensorflow._api.v2.distribute', 'tensorflow._api.v2.dtypes', 'tensorflow._api.v2.errors', 'tensorflow._api.v2.experimental.dlpack', 'tensorflow._api.v2.experimental.numpy.random', 'tensorflow._api.v2.experimental.numpy', 'tensorflow._api.v2.experimental.tensorrt', 'tensorflow._api.v2.experimental', 'tensorflow._api.v2.feature_column', 'tensorflow._api.v2.graph_util', 'tensorflow._api.v2.image', 'tensorflow._api.v2.io.gfile', 'tensorflow._api.v2.io', 'tensorflow._api.v2.linalg.experimental', 'tensorflow._api.v2.linalg', 'tensorflow._api.v2.lite.experimental.authoring', 'tensorflow._api.v2.lite.experimental', 'tensorflow._api.v2.lite', 'tensorflow._api.v2.lookup.experimental', 'tensorflow._api.v2.lookup', 'tensorflow._api.v2.math.special', 'tensorflow._api.v2.math', 'tensorflow._api.v2.mixed_precision.experimental', 'tensorflow._api.v2.mixed_precision', 'tensorflow._api.v2.mlir.experimental', 'tensorflow._api.v2.mlir', 'tensorflow._api.v2.nest', 'tensorflow._api.v2.nn.experimental', 'tensorflow._api.v2.nn', 'tensorflow._api.v2.profiler.experimental.client', 'tensorflow._api.v2.profiler.experimental.server', 'tensorflow._api.v2.profiler.experimental', 'tensorflow._api.v2.profiler', 'tensorflow._api.v2.quantization', 'tensorflow._api.v2.queue', 'tensorflow._api.v2.ragged', 'tensorflow._api.v2.random.experimental', 'tensorflow._api.v2.random', 'tensorflow._api.v2.raw_ops', 'tensorflow._api.v2.saved_model.experimental', 'tensorflow._api.v2.saved_model', 'tensorflow._api.v2.sets', 'tensorflow._api.v2.signal', 'tensorflow._api.v2.sparse', 'tensorflow._api.v2.strings', 'tensorflow._api.v2.summary.experimental', 'tensorflow._api.v2.summary', 'tensorflow._api.v2.sysconfig', 'tensorflow._api.v2.test', 'tensorflow._api.v2.tpu.experimental.embedding', 'tensorflow._api.v2.tpu.experimental', 'tensorflow._api.v2.tpu', 'tensorflow._api.v2.train.experimental', 'tensorflow._api.v2.train', 'tensorflow._api.v2.types.experimental', 'tensorflow._api.v2.types', 'tensorflow._api.v2.version', 'tensorflow._api.v2.xla.experimental', 'tensorflow._api.v2.xla', 'tensorflow', 'tensorflow.compat.v1.app', 'tensorflow.compat.v1.audio', 'tensorflow.compat.v1.autograph.experimental', 'tensorflow.compat.v1.autograph', 'tensorflow.compat.v1.bitwise', 'tensorflow.compat.v1.compat.v1.compat', 'tensorflow.compat.v1.compat.v1', 'tensorflow.compat.v1.compat.v2.compat', 'tensorflow.compat.v1.compat.v2', 'tensorflow.compat.v1.compat', 'tensorflow.compat.v1.config.experimental', 'tensorflow.compat.v1.config.optimizer', 'tensorflow.compat.v1.config.threading', 'tensorflow.compat.v1.config', 'tensorflow.compat.v1.data.experimental.service', 'tensorflow.compat.v1.data.experimental', 'tensorflow.compat.v1.data', 'tensorflow.compat.v1.debugging.experimental', 'tensorflow.compat.v1.debugging', 'tensorflow.compat.v1.distribute.cluster_resolver', 'tensorflow.compat.v1.distribute.experimental', 'tensorflow.compat.v1.distribute', 'tensorflow.compat.v1.distributions', 'tensorflow.compat.v1.dtypes', 'tensorflow.compat.v1.errors', 'tensorflow.compat.v1.experimental', 'tensorflow.compat.v1.feature_column', 'tensorflow.compat.v1.gfile', 'tensorflow.compat.v1.graph_util', 'tensorflow.compat.v1.image', 'tensorflow.compat.v1.initializers', 'tensorflow.compat.v1.io.gfile', 'tensorflow.compat.v1.io', 'tensorflow.compat.v1.layers.experimental', 'tensorflow.compat.v1.layers', 'tensorflow.compat.v1.linalg.experimental', 'tensorflow.compat.v1.linalg', 'tensorflow.compat.v1.lite.constants', 'tensorflow.compat.v1.lite.experimental.authoring', 'tensorflow.compat.v1.lite.experimental', 'tensorflow.compat.v1.lite', 'tensorflow.compat.v1.logging', 'tensorflow.compat.v1.lookup.experimental', 'tensorflow.compat.v1.lookup', 'tensorflow.compat.v1.losses', 'tensorflow.compat.v1.manip', 'tensorflow.compat.v1.math.special', 'tensorflow.compat.v1.math', 'tensorflow.compat.v1.metrics', 'tensorflow.compat.v1.mixed_precision.experimental', 'tensorflow.compat.v1.mixed_precision', 'tensorflow.compat.v1.mlir.experimental', 'tensorflow.compat.v1.mlir', 'tensorflow.compat.v1.nest', 'tensorflow.compat.v1.nn.experimental', 'tensorflow.compat.v1.nn.rnn_cell', 'tensorflow.compat.v1.nn', 'tensorflow.compat.v1.profiler', 'tensorflow.compat.v1.python_io', 'tensorflow.compat.v1.quantization', 'tensorflow.compat.v1.queue', 'tensorflow.compat.v1.ragged', 'tensorflow.compat.v1.random.experimental', 'tensorflow.compat.v1.random', 'tensorflow.compat.v1.raw_ops', 'tensorflow.compat.v1.resource_loader', 'tensorflow.compat.v1.saved_model.builder', 'tensorflow.compat.v1.saved_model.constants', 'tensorflow.compat.v1.saved_model.experimental', 'tensorflow.compat.v1.saved_model.loader', 'tensorflow.compat.v1.saved_model.main_op', 'tensorflow.compat.v1.saved_model.signature_constants', 'tensorflow.compat.v1.saved_model.signature_def_utils', 'tensorflow.compat.v1.saved_model.tag_constants', 'tensorflow.compat.v1.saved_model.utils', 'tensorflow.compat.v1.saved_model', 'tensorflow.compat.v1.sets', 'tensorflow.compat.v1.signal', 'tensorflow.compat.v1.sparse', 'tensorflow.compat.v1.spectral', 'tensorflow.compat.v1.strings', 'tensorflow.compat.v1.summary', 'tensorflow.compat.v1.sysconfig', 'tensorflow.compat.v1.test', 'tensorflow.compat.v1.tpu.experimental.embedding', 'tensorflow.compat.v1.tpu.experimental', 'tensorflow.compat.v1.tpu', 'tensorflow.compat.v1.train.experimental', 'tensorflow.compat.v1.train.queue_runner', 'tensorflow.compat.v1.train', 'tensorflow.compat.v1.types.experimental', 'tensorflow.compat.v1.types', 'tensorflow.compat.v1.user_ops', 'tensorflow.compat.v1.version', 'tensorflow.compat.v1.xla.experimental', 'tensorflow.compat.v1.xla', 'tensorflow.compat.v1', 'tensorflow.compat.v2.__internal__.autograph', 'tensorflow.compat.v2.__internal__.decorator', 'tensorflow.compat.v2.__internal__.dispatch', 'tensorflow.compat.v2.__internal__.distribute.combinations', 'tensorflow.compat.v2.__internal__.distribute.interim', 'tensorflow.compat.v2.__internal__.distribute.multi_process_runner', 'tensorflow.compat.v2.__internal__.distribute', 'tensorflow.compat.v2.__internal__.eager_context', 'tensorflow.compat.v2.__internal__.feature_column', 'tensorflow.compat.v2.__internal__.function', 'tensorflow.compat.v2.__internal__.graph_util', 'tensorflow.compat.v2.__internal__.mixed_precision', 'tensorflow.compat.v2.__internal__.monitoring', 'tensorflow.compat.v2.__internal__.nest', 'tensorflow.compat.v2.__internal__.ops', 'tensorflow.compat.v2.__internal__.saved_model.load', 'tensorflow.compat.v2.__internal__.saved_model', 'tensorflow.compat.v2.__internal__.smart_cond', 'tensorflow.compat.v2.__internal__.test.combinations', 'tensorflow.compat.v2.__internal__.test', 'tensorflow.compat.v2.__internal__.tf2', 'tensorflow.compat.v2.__internal__.tracking', 'tensorflow.compat.v2.__internal__.train', 'tensorflow.compat.v2.__internal__.types', 'tensorflow.compat.v2.__internal__', 'tensorflow.compat.v2.__operators__', 'tensorflow.compat.v2.audio', 'tensorflow.compat.v2.autodiff', 'tensorflow.compat.v2.autograph.experimental', 'tensorflow.compat.v2.autograph', 'tensorflow.compat.v2.bitwise', 'tensorflow.compat.v2.compat.v1.compat', 'tensorflow.compat.v2.compat.v1', 'tensorflow.compat.v2.compat.v2.compat', 'tensorflow.compat.v2.compat.v2', 'tensorflow.compat.v2.compat', 'tensorflow.compat.v2.config.experimental', 'tensorflow.compat.v2.config.optimizer', 'tensorflow.compat.v2.config.threading', 'tensorflow.compat.v2.config', 'tensorflow.compat.v2.data.experimental.service', 'tensorflow.compat.v2.data.experimental', 'tensorflow.compat.v2.data', 'tensorflow.compat.v2.debugging.experimental', 'tensorflow.compat.v2.debugging', 'tensorflow.compat.v2.distribute.cluster_resolver', 'tensorflow.compat.v2.distribute.coordinator', 'tensorflow.compat.v2.distribute.experimental.coordinator', 'tensorflow.compat.v2.distribute.experimental.partitioners', 'tensorflow.compat.v2.distribute.experimental.rpc', 'tensorflow.compat.v2.distribute.experimental', 'tensorflow.compat.v2.distribute', 'tensorflow.compat.v2.dtypes', 'tensorflow.compat.v2.errors', 'tensorflow.compat.v2.experimental.dlpack', 'tensorflow.compat.v2.experimental.numpy.random', 'tensorflow.compat.v2.experimental.numpy', 'tensorflow.compat.v2.experimental.tensorrt', 'tensorflow.compat.v2.experimental', 'tensorflow.compat.v2.feature_column', 'tensorflow.compat.v2.graph_util', 'tensorflow.compat.v2.image', 'tensorflow.compat.v2.io.gfile', 'tensorflow.compat.v2.io', 'tensorflow.compat.v2.linalg.experimental', 'tensorflow.compat.v2.linalg', 'tensorflow.compat.v2.lite.experimental.authoring', 'tensorflow.compat.v2.lite.experimental', 'tensorflow.compat.v2.lite', 'tensorflow.compat.v2.lookup.experimental', 'tensorflow.compat.v2.lookup', 'tensorflow.compat.v2.math.special', 'tensorflow.compat.v2.math', 'tensorflow.compat.v2.mixed_precision.experimental', 'tensorflow.compat.v2.mixed_precision', 'tensorflow.compat.v2.mlir.experimental', 'tensorflow.compat.v2.mlir', 'tensorflow.compat.v2.nest', 'tensorflow.compat.v2.nn.experimental', 'tensorflow.compat.v2.nn', 'tensorflow.compat.v2.profiler.experimental.client', 'tensorflow.compat.v2.profiler.experimental.server', 'tensorflow.compat.v2.profiler.experimental', 'tensorflow.compat.v2.profiler', 'tensorflow.compat.v2.quantization', 'tensorflow.compat.v2.queue', 'tensorflow.compat.v2.ragged', 'tensorflow.compat.v2.random.experimental', 'tensorflow.compat.v2.random', 'tensorflow.compat.v2.raw_ops', 'tensorflow.compat.v2.saved_model.experimental', 'tensorflow.compat.v2.saved_model', 'tensorflow.compat.v2.sets', 'tensorflow.compat.v2.signal', 'tensorflow.compat.v2.sparse', 'tensorflow.compat.v2.strings', 'tensorflow.compat.v2.summary.experimental', 'tensorflow.compat.v2.summary', 'tensorflow.compat.v2.sysconfig', 'tensorflow.compat.v2.test', 'tensorflow.compat.v2.tpu.experimental.embedding', 'tensorflow.compat.v2.tpu.experimental', 'tensorflow.compat.v2.tpu', 'tensorflow.compat.v2.train.experimental', 'tensorflow.compat.v2.train', 'tensorflow.compat.v2.types.experimental', 'tensorflow.compat.v2.types', 'tensorflow.compat.v2.version', 'tensorflow.compat.v2.xla.experimental', 'tensorflow.compat.v2.xla', 'tensorflow.compat.v2', 'tensorflow.compat', 'keras.distribute.sidecar_evaluator', 'keras.distribute', 'keras.backend_config', 'keras.distribute.distribute_coordinator_utils', 'keras.engine', 'keras.utils', 'keras.utils.object_identity', 'keras.engine.keras_tensor', 'keras.utils.control_flow_util', 'keras.utils.tf_contextlib', 'keras.utils.tf_inspect', 'keras.backend', 'keras.distribute.distributed_training_utils', 'keras.utils.io_utils', 'keras.utils.generic_utils', 'keras.constraints', 'keras.initializers.initializers_v1', 'keras.initializers.initializers_v2', 'keras.initializers', 'keras.regularizers', 'keras.utils.tf_utils', 'keras.engine.base_layer_utils', 'keras.engine.input_spec', 'keras.saving', 'keras.saving.saved_model', 'keras.saving.saved_model.json_utils', 'keras.engine.node', 'keras.mixed_precision', 'keras.mixed_precision.autocast_variable', 'keras.optimizer_experimental', 'keras.optimizer_v2', 'keras.optimizer_v2.learning_rate_schedule', 'keras.optimizer_v2.utils', 'keras.optimizer_experimental.optimizer', 'keras.optimizer_experimental.adadelta', 'keras.optimizer_experimental.adagrad', 'keras.optimizer_experimental.adam', 'keras.optimizer_experimental.sgd', 'keras.optimizer_v1', 'keras.utils.layer_utils', 'keras.optimizer_v2.optimizer_v2', 'keras.optimizer_v2.adadelta', 'keras.optimizer_v2.adagrad', 'keras.optimizer_v2.adam', 'keras.optimizer_v2.adamax', 'keras.optimizer_v2.ftrl', 'keras.optimizer_v2.gradient_descent', 'keras.optimizer_v2.nadam', 'keras.optimizer_v2.rmsprop', 'keras.optimizers', 'keras.mixed_precision.loss_scale', 'keras.mixed_precision.loss_scale_optimizer', 'keras.mixed_precision.device_compatibility_check', 'keras.mixed_precision.policy', 'keras.saving.saved_model.utils', 'keras.saving.saved_model.base_serialization', 'keras.saving.saved_model.constants', 'keras.utils.losses_utils', 'keras.losses', 'keras.utils.version_utils', 'keras.saving.saving_utils', 'keras.protobuf', 'keras.protobuf.versions_pb2', 'keras.protobuf.saved_metadata_pb2', 'keras.saving.saved_model.order_preserving_set', 'keras.saving.saved_model.serialized_attributes', 'keras.utils.metrics_utils', 'keras.saving.saved_model.load', 'keras.saving.saved_model.save_impl', 'keras.saving.saved_model.layer_serialization', 'keras.utils.traceback_utils', 'keras.engine.base_layer', 'keras.engine.input_layer', 'keras.engine.training_utils', 'six.moves.urllib.parse', 'keras.utils.data_utils', 'keras.utils.dataset_creator', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'keras.engine.data_adapter', 'keras.engine.base_preprocessing_layer', 'keras.layers.preprocessing', 'keras.layers.preprocessing.preprocessing_utils', 'keras_preprocessing', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageFilter', 'PIL.ImageStat', 'PIL.ImageEnhance', 'keras_preprocessing.image.utils', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.numpy_array_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image', 'keras.preprocessing.dataset_utils', 'keras.preprocessing.image_dataset', 'keras.preprocessing.image', 'keras_preprocessing.sequence', 'keras.preprocessing.sequence', 'keras_preprocessing.text', 'keras.preprocessing.text_dataset', 'keras.preprocessing.text', 'keras.preprocessing.timeseries', 'keras.distribute.distributed_file_utils', 'keras.utils.mode_keys', 'keras.distribute.worker_training_state', 'keras.callbacks', 'keras.engine.compile_utils', 'keras.saving.model_config', 'keras.saving.hdf5_format', 'keras.saving.saved_model.load_context', 'keras.layers.advanced_activations', 'keras.utils.conv_utils', 'keras.layers.pooling', 'keras.layers.convolutional', 'keras.layers.recurrent', 'keras.layers.convolutional_recurrent', 'keras.layers.core.activation', 'keras.layers.core.activity_regularization', 'keras.layers.core.dense', 'keras.layers.core.dropout', 'keras.layers.core.flatten', 'keras.layers.core.lambda_layer', 'keras.layers.core.masking', 'keras.layers.core.permute', 'keras.layers.core.repeat_vector', 'keras.layers.core.reshape', 'keras.layers.core.spatial_dropout', 'keras.layers.core.tf_op_layer', 'keras.layers.core', 'keras.layers.recurrent_v2', 'keras.layers.cudnn_recurrent', 'keras.layers.dense_attention', 'keras.layers.einsum_dense', 'keras.layers.embeddings', 'keras.layers.local', 'keras.layers.merge', 'keras.layers.multi_head_attention', 'keras.layers.noise', 'keras.layers.legacy_rnn', 'keras.layers.legacy_rnn.rnn_cell_wrapper_impl', 'keras.layers.rnn_cell_wrapper_v2', 'keras.layers.wrappers', 'keras.layers.normalization', 'keras.layers.normalization.batch_normalization', 'keras.layers.normalization.batch_normalization_v1', 'keras.layers.normalization.layer_normalization', 'keras.layers.preprocessing.category_encoding', 'keras.layers.preprocessing.discretization', 'keras.layers.preprocessing.hashing', 'keras.layers.preprocessing.hashed_crossing', 'keras.layers.preprocessing.index_lookup', 'keras.layers.preprocessing.integer_lookup', 'keras.layers.preprocessing.normalization', 'keras.layers.preprocessing.string_lookup', 'keras.layers.preprocessing.text_vectorization', 'keras.layers.serialization', 'keras.saving.saved_model.save', 'keras.saving.save', 'keras.saving.pickle_utils', 'keras.saving.saved_model.model_serialization', 'keras.engine.training', 'keras.utils.multi_gpu_utils', 'keras.utils.np_utils', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'dot_parser', 'pydot', 'keras.utils.vis_utils', 'keras.utils.all_utils', 'keras.preprocessing', 'keras.layers.preprocessing.image_preprocessing', 'keras.layers.kernelized', 'keras.layers', 'keras.activations', 'keras.saving.saved_model.metric_serialization', 'keras.metrics', 'keras.engine.functional_utils', 'keras.saving.saved_model.network_serialization', 'keras.engine.functional', 'keras.engine.sequential', 'keras.engine.training_utils_v1', 'keras.distribute.distributed_training_utils_v1', 'keras.engine.training_arrays_v1', 'keras.engine.partial_batch_padding_handler', 'keras.engine.training_distributed_v1', 'keras.engine.training_eager_v1', 'keras.engine.training_generator_v1', 'keras.engine.training_v1', 'keras.models', 'keras', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver._cext', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=C:\Users\astro\.matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from C:\Users\astro\.matplotlib\fontlist-v330.json
DEBUG:matplotlib.pyplot:Loaded backend module://matplotlib_inline.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://matplotlib_inline.backend_inline version unknown.
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_GLOBAL(arg=0, lineno=10)
           4	LOAD_CONST(arg=1, lineno=10)
           6	LOAD_FAST(arg=2, lineno=10)
           8	CALL_FUNCTION(arg=2, lineno=10)
          10	STORE_FAST(arg=6, lineno=10)
          12	LOAD_CONST(arg=1, lineno=11)
          14	LOAD_FAST(arg=2, lineno=11)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=11)
          18	STORE_FAST(arg=7, lineno=11)
          20	LOAD_GLOBAL(arg=1, lineno=12)
          22	LOAD_FAST(arg=6, lineno=12)
          24	LOAD_FAST(arg=5, lineno=12)
          26	BINARY_MULTIPLY(arg=None, lineno=12)
          28	CALL_FUNCTION(arg=1, lineno=12)
          30	STORE_FAST(arg=8, lineno=12)
          32	LOAD_CONST(arg=2, lineno=13)
          34	STORE_FAST(arg=9, lineno=13)
          36	LOAD_CONST(arg=3, lineno=15)
          38	STORE_FAST(arg=10, lineno=15)
          40	LOAD_CONST(arg=2, lineno=16)
          42	STORE_FAST(arg=11, lineno=16)
          44	LOAD_CONST(arg=2, lineno=17)
          46	STORE_FAST(arg=12, lineno=17)
          48	LOAD_CONST(arg=3, lineno=18)
          50	STORE_FAST(arg=13, lineno=18)
          52	LOAD_CONST(arg=2, lineno=19)
          54	STORE_FAST(arg=14, lineno=19)
          56	LOAD_CONST(arg=2, lineno=20)
          58	STORE_FAST(arg=15, lineno=20)
          60	LOAD_FAST(arg=3, lineno=22)
          62	LOAD_ATTR(arg=2, lineno=22)
          64	LOAD_CONST(arg=3, lineno=22)
          66	BINARY_SUBSCR(arg=None, lineno=22)
          68	STORE_FAST(arg=16, lineno=22)
          70	LOAD_FAST(arg=0, lineno=23)
          72	LOAD_ATTR(arg=2, lineno=23)
          74	LOAD_CONST(arg=3, lineno=23)
          76	BINARY_SUBSCR(arg=None, lineno=23)
          78	STORE_FAST(arg=17, lineno=23)
          80	LOAD_FAST(arg=1, lineno=24)
          82	LOAD_ATTR(arg=2, lineno=24)
          84	LOAD_CONST(arg=3, lineno=24)
          86	BINARY_SUBSCR(arg=None, lineno=24)
          88	STORE_FAST(arg=18, lineno=24)
          90	LOAD_FAST(arg=1, lineno=25)
          92	LOAD_ATTR(arg=2, lineno=25)
          94	LOAD_CONST(arg=4, lineno=25)
          96	BINARY_SUBSCR(arg=None, lineno=25)
          98	STORE_FAST(arg=19, lineno=25)
         100	LOAD_GLOBAL(arg=3, lineno=27)
         102	LOAD_FAST(arg=18, lineno=27)
         104	CALL_FUNCTION(arg=1, lineno=27)
         106	GET_ITER(arg=None, lineno=27)
>        108	FOR_ITER(arg=344, lineno=27)
         112	STORE_FAST(arg=20, lineno=27)
         114	LOAD_GLOBAL(arg=1, lineno=29)
         116	LOAD_FAST(arg=9, lineno=29)
         118	CALL_FUNCTION(arg=1, lineno=29)
         120	STORE_FAST(arg=10, lineno=29)
         122	LOAD_FAST(arg=6, lineno=32)
         124	LOAD_FAST(arg=9, lineno=32)
         126	LOAD_FAST(arg=10, lineno=32)
         128	BINARY_SUBTRACT(arg=None, lineno=32)
         130	BINARY_MULTIPLY(arg=None, lineno=32)
         132	STORE_FAST(arg=11, lineno=32)
         134	LOAD_FAST(arg=11, lineno=35)
         136	LOAD_FAST(arg=5, lineno=35)
         138	BINARY_MULTIPLY(arg=None, lineno=35)
         140	STORE_FAST(arg=12, lineno=35)
         142	LOAD_GLOBAL(arg=1, lineno=36)
         144	LOAD_FAST(arg=12, lineno=36)
         146	CALL_FUNCTION(arg=1, lineno=36)
         148	STORE_FAST(arg=13, lineno=36)
         150	LOAD_FAST(arg=12, lineno=39)
         152	LOAD_FAST(arg=13, lineno=39)
         154	BINARY_SUBTRACT(arg=None, lineno=39)
         156	STORE_FAST(arg=14, lineno=39)
         158	LOAD_GLOBAL(arg=0, lineno=42)
         160	LOAD_FAST(arg=10, lineno=42)
         162	LOAD_CONST(arg=4, lineno=42)
         164	BINARY_ADD(arg=None, lineno=42)
         166	LOAD_FAST(arg=16, lineno=42)
         168	LOAD_FAST(arg=13, lineno=42)
         170	BINARY_SUBTRACT(arg=None, lineno=42)
         172	LOAD_FAST(arg=8, lineno=42)
         174	BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
         176	CALL_FUNCTION(arg=2, lineno=42)
         178	STORE_FAST(arg=21, lineno=42)
         180	LOAD_GLOBAL(arg=3, lineno=43)
         182	LOAD_FAST(arg=21, lineno=43)
         184	CALL_FUNCTION(arg=1, lineno=43)
         186	GET_ITER(arg=None, lineno=43)
>        188	FOR_ITER(arg=90, lineno=43)
         190	STORE_FAST(arg=22, lineno=43)
         192	LOAD_FAST(arg=3, lineno=45)
         194	LOAD_FAST(arg=13, lineno=45)
         196	LOAD_FAST(arg=22, lineno=45)
         198	LOAD_FAST(arg=8, lineno=45)
         200	BINARY_MULTIPLY(arg=None, lineno=45)
         202	BINARY_ADD(arg=None, lineno=45)
         204	BINARY_SUBSCR(arg=None, lineno=45)
         206	LOAD_FAST(arg=14, lineno=45)
         208	LOAD_FAST(arg=4, lineno=45)
         210	LOAD_FAST(arg=13, lineno=45)
         212	LOAD_FAST(arg=22, lineno=45)
         214	LOAD_FAST(arg=8, lineno=45)
         216	BINARY_MULTIPLY(arg=None, lineno=45)
         218	BINARY_ADD(arg=None, lineno=45)
         220	BINARY_SUBSCR(arg=None, lineno=45)
         222	BINARY_MULTIPLY(arg=None, lineno=45)
         224	BINARY_ADD(arg=None, lineno=45)
         226	STORE_FAST(arg=15, lineno=45)
         228	LOAD_GLOBAL(arg=3, lineno=46)
         230	LOAD_FAST(arg=19, lineno=46)
         232	CALL_FUNCTION(arg=1, lineno=46)
         234	GET_ITER(arg=None, lineno=46)
>        236	FOR_ITER(arg=40, lineno=46)
         238	STORE_FAST(arg=23, lineno=46)
         240	LOAD_FAST(arg=1, lineno=47)
         242	LOAD_FAST(arg=20, lineno=47)
         244	LOAD_FAST(arg=23, lineno=47)
         246	BUILD_TUPLE(arg=2, lineno=47)
         248	DUP_TOP_TWO(arg=None, lineno=47)
         250	BINARY_SUBSCR(arg=None, lineno=47)
         252	LOAD_FAST(arg=15, lineno=47)
         254	LOAD_FAST(arg=0, lineno=47)
         256	LOAD_FAST(arg=10, lineno=47)
         258	LOAD_FAST(arg=22, lineno=47)
         260	BINARY_SUBTRACT(arg=None, lineno=47)
         262	LOAD_FAST(arg=23, lineno=47)
         264	BUILD_TUPLE(arg=2, lineno=47)
         266	BINARY_SUBSCR(arg=None, lineno=47)
         268	BINARY_MULTIPLY(arg=None, lineno=47)
         270	INPLACE_ADD(arg=None, lineno=47)
         272	ROT_THREE(arg=None, lineno=47)
         274	STORE_SUBSCR(arg=None, lineno=47)
         276	JUMP_ABSOLUTE(arg=236, lineno=47)
>        278	JUMP_ABSOLUTE(arg=188, lineno=47)
>        280	LOAD_FAST(arg=6, lineno=50)
         282	LOAD_FAST(arg=11, lineno=50)
         284	BINARY_SUBTRACT(arg=None, lineno=50)
         286	STORE_FAST(arg=11, lineno=50)
         288	LOAD_FAST(arg=11, lineno=53)
         290	LOAD_FAST(arg=5, lineno=53)
         292	BINARY_MULTIPLY(arg=None, lineno=53)
         294	STORE_FAST(arg=12, lineno=53)
         296	LOAD_GLOBAL(arg=1, lineno=54)
         298	LOAD_FAST(arg=12, lineno=54)
         300	CALL_FUNCTION(arg=1, lineno=54)
         302	STORE_FAST(arg=13, lineno=54)
         304	LOAD_FAST(arg=12, lineno=57)
         306	LOAD_FAST(arg=13, lineno=57)
         308	BINARY_SUBTRACT(arg=None, lineno=57)
         310	STORE_FAST(arg=14, lineno=57)
         312	LOAD_GLOBAL(arg=0, lineno=60)
         314	LOAD_FAST(arg=17, lineno=60)
         316	LOAD_FAST(arg=10, lineno=60)
         318	BINARY_SUBTRACT(arg=None, lineno=60)
         320	LOAD_CONST(arg=4, lineno=60)
         322	BINARY_SUBTRACT(arg=None, lineno=60)
         324	LOAD_FAST(arg=16, lineno=60)
         326	LOAD_FAST(arg=13, lineno=60)
         328	BINARY_SUBTRACT(arg=None, lineno=60)
         330	LOAD_FAST(arg=8, lineno=60)
         332	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         334	CALL_FUNCTION(arg=2, lineno=60)
         336	STORE_FAST(arg=24, lineno=60)
         338	LOAD_GLOBAL(arg=3, lineno=61)
         340	LOAD_FAST(arg=24, lineno=61)
         342	CALL_FUNCTION(arg=1, lineno=61)
         344	GET_ITER(arg=None, lineno=61)
>        346	FOR_ITER(arg=98, lineno=61)
         348	STORE_FAST(arg=25, lineno=61)
         350	LOAD_FAST(arg=3, lineno=62)
         352	LOAD_FAST(arg=13, lineno=62)
         354	LOAD_FAST(arg=25, lineno=62)
         356	LOAD_FAST(arg=8, lineno=62)
         358	BINARY_MULTIPLY(arg=None, lineno=62)
         360	BINARY_ADD(arg=None, lineno=62)
         362	BINARY_SUBSCR(arg=None, lineno=62)
         364	LOAD_FAST(arg=14, lineno=62)
         366	LOAD_FAST(arg=4, lineno=62)
         368	LOAD_FAST(arg=13, lineno=62)
         370	LOAD_FAST(arg=25, lineno=62)
         372	LOAD_FAST(arg=8, lineno=62)
         374	BINARY_MULTIPLY(arg=None, lineno=62)
         376	BINARY_ADD(arg=None, lineno=62)
         378	BINARY_SUBSCR(arg=None, lineno=62)
         380	BINARY_MULTIPLY(arg=None, lineno=62)
         382	BINARY_ADD(arg=None, lineno=62)
         384	STORE_FAST(arg=15, lineno=62)
         386	LOAD_GLOBAL(arg=3, lineno=63)
         388	LOAD_FAST(arg=19, lineno=63)
         390	CALL_FUNCTION(arg=1, lineno=63)
         392	GET_ITER(arg=None, lineno=63)
>        394	FOR_ITER(arg=46, lineno=63)
         396	STORE_FAST(arg=23, lineno=63)
         398	LOAD_FAST(arg=1, lineno=64)
         400	LOAD_FAST(arg=20, lineno=64)
         402	LOAD_FAST(arg=23, lineno=64)
         404	BUILD_TUPLE(arg=2, lineno=64)
         406	DUP_TOP_TWO(arg=None, lineno=64)
         408	BINARY_SUBSCR(arg=None, lineno=64)
         410	LOAD_FAST(arg=15, lineno=64)
         412	LOAD_FAST(arg=0, lineno=64)
         414	LOAD_FAST(arg=10, lineno=64)
         416	LOAD_FAST(arg=25, lineno=64)
         418	BINARY_ADD(arg=None, lineno=64)
         420	LOAD_CONST(arg=4, lineno=64)
         422	BINARY_ADD(arg=None, lineno=64)
         424	LOAD_FAST(arg=23, lineno=64)
         426	BUILD_TUPLE(arg=2, lineno=64)
         428	BINARY_SUBSCR(arg=None, lineno=64)
         430	BINARY_MULTIPLY(arg=None, lineno=64)
         432	INPLACE_ADD(arg=None, lineno=64)
         434	ROT_THREE(arg=None, lineno=64)
         436	STORE_SUBSCR(arg=None, lineno=64)
         438	JUMP_ABSOLUTE(arg=394, lineno=64)
>        442	JUMP_ABSOLUTE(arg=346, lineno=64)
>        446	LOAD_FAST(arg=9, lineno=67)
         448	LOAD_FAST(arg=7, lineno=67)
         450	INPLACE_ADD(arg=None, lineno=67)
         452	STORE_FAST(arg=9, lineno=67)
         454	JUMP_ABSOLUTE(arg=108, lineno=67)
>        456	LOAD_CONST(arg=0, lineno=67)
         458	RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=10)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=10)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=10)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=10)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$const4.1', '$sample_ratio6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=6, lineno=10)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=11)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=11)
DEBUG:numba.core.byteflow:stack ['$const12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=11)
DEBUG:numba.core.byteflow:stack ['$const12.4', '$sample_ratio14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=7, lineno=11)
DEBUG:numba.core.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=12)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=6, lineno=12)
DEBUG:numba.core.byteflow:stack ['$20load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=12)
DEBUG:numba.core.byteflow:stack ['$20load_global.7', '$scale22.8']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=12)
DEBUG:numba.core.byteflow:stack ['$20load_global.7', '$scale22.8', '$num_table24.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=12)
DEBUG:numba.core.byteflow:stack ['$20load_global.7', '$26binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=8, lineno=12)
DEBUG:numba.core.byteflow:stack ['$28call_function.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=13)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=9, lineno=13)
DEBUG:numba.core.byteflow:stack ['$const32.12']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=15)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=10, lineno=15)
DEBUG:numba.core.byteflow:stack ['$const36.13']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=16)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=11, lineno=16)
DEBUG:numba.core.byteflow:stack ['$const40.14']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=17)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=12, lineno=17)
DEBUG:numba.core.byteflow:stack ['$const44.15']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=18)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=STORE_FAST(arg=13, lineno=18)
DEBUG:numba.core.byteflow:stack ['$const48.16']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=14, lineno=19)
DEBUG:numba.core.byteflow:stack ['$const52.17']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=STORE_FAST(arg=15, lineno=20)
DEBUG:numba.core.byteflow:stack ['$const56.18']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=22)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=22)
DEBUG:numba.core.byteflow:stack ['$interp_win60.19']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=22)
DEBUG:numba.core.byteflow:stack ['$62load_attr.20']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=22)
DEBUG:numba.core.byteflow:stack ['$62load_attr.20', '$const64.21']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_FAST(arg=16, lineno=22)
DEBUG:numba.core.byteflow:stack ['$66binary_subscr.22']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=2, lineno=23)
DEBUG:numba.core.byteflow:stack ['$x70.23']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=3, lineno=23)
DEBUG:numba.core.byteflow:stack ['$72load_attr.24']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=23)
DEBUG:numba.core.byteflow:stack ['$72load_attr.24', '$const74.25']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=STORE_FAST(arg=17, lineno=23)
DEBUG:numba.core.byteflow:stack ['$76binary_subscr.26']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=24)
DEBUG:numba.core.byteflow:stack ['$y80.27']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=24)
DEBUG:numba.core.byteflow:stack ['$82load_attr.28']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG:numba.core.byteflow:stack ['$82load_attr.28', '$const84.29']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=STORE_FAST(arg=18, lineno=24)
DEBUG:numba.core.byteflow:stack ['$86binary_subscr.30']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=25)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=2, lineno=25)
DEBUG:numba.core.byteflow:stack ['$y90.31']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=25)
DEBUG:numba.core.byteflow:stack ['$92load_attr.32']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=25)
DEBUG:numba.core.byteflow:stack ['$92load_attr.32', '$const94.33']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=STORE_FAST(arg=19, lineno=25)
DEBUG:numba.core.byteflow:stack ['$96binary_subscr.34']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_GLOBAL(arg=3, lineno=27)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=18, lineno=27)
DEBUG:numba.core.byteflow:stack ['$100load_global.35']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=CALL_FUNCTION(arg=1, lineno=27)
DEBUG:numba.core.byteflow:stack ['$100load_global.35', '$n_out102.36']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=GET_ITER(arg=None, lineno=27)
DEBUG:numba.core.byteflow:stack ['$104call_function.37']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=108, stack=('$106get_iter.38',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi108.0']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=FOR_ITER(arg=344, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi108.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=456, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=('$phi108.0', '$108for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=456 nstack_initial=0), State(pc_initial=112 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=456, inst=LOAD_CONST(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=458, inst=RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.core.byteflow:stack ['$const456.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi112.0', '$phi112.1']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=STORE_FAST(arg=20, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$phi112.1']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_GLOBAL(arg=1, lineno=29)
DEBUG:numba.core.byteflow:stack ['$phi112.0']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=9, lineno=29)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$114load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=CALL_FUNCTION(arg=1, lineno=29)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$114load_global.2', '$time_register116.3']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=STORE_FAST(arg=10, lineno=29)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$118call_function.4']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_FAST(arg=6, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi112.0']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=9, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$scale122.5']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=10, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$scale122.5', '$time_register124.6']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=BINARY_SUBTRACT(arg=None, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$scale122.5', '$time_register124.6', '$n126.7']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=BINARY_MULTIPLY(arg=None, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$scale122.5', '$128binary_subtract.8']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=STORE_FAST(arg=11, lineno=32)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$130binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_FAST(arg=11, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi112.0']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=5, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$frac134.10']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=BINARY_MULTIPLY(arg=None, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$frac134.10', '$num_table136.11']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=STORE_FAST(arg=12, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$138binary_multiply.12']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_GLOBAL(arg=1, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi112.0']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=12, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$142load_global.13']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=CALL_FUNCTION(arg=1, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$142load_global.13', '$index_frac144.14']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=STORE_FAST(arg=13, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$146call_function.15']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=12, lineno=39)
DEBUG:numba.core.byteflow:stack ['$phi112.0']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=13, lineno=39)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$index_frac150.16']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=39)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$index_frac150.16', '$offset152.17']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=STORE_FAST(arg=14, lineno=39)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$154binary_subtract.18']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_GLOBAL(arg=0, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_FAST(arg=10, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$158load_global.19']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_CONST(arg=4, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$158load_global.19', '$n160.20']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=BINARY_ADD(arg=None, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$158load_global.19', '$n160.20', '$const162.21']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=16, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$158load_global.19', '$164binary_add.22']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_FAST(arg=13, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$158load_global.19', '$164binary_add.22', '$nwin166.23']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBTRACT(arg=None, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$158load_global.19', '$164binary_add.22', '$nwin166.23', '$offset168.24']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=8, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$158load_global.19', '$164binary_add.22', '$170binary_subtract.25']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$158load_global.19', '$164binary_add.22', '$170binary_subtract.25', '$index_step172.26']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=CALL_FUNCTION(arg=2, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$158load_global.19', '$164binary_add.22', '$174binary_floor_divide.27']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=STORE_FAST(arg=21, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$176call_function.28']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=3, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi112.0']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_FAST(arg=21, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$180load_global.29']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=CALL_FUNCTION(arg=1, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$180load_global.29', '$i_max182.30']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=GET_ITER(arg=None, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi112.0', '$184call_function.31']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=('$phi112.0', '$186get_iter.32'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi188.0', '$phi188.1']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=FOR_ITER(arg=90, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$phi188.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=280, stack=('$phi188.0',), blockstack=(), npush=0), Edge(pc=190, stack=('$phi188.0', '$phi188.1', '$188for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=280 nstack_initial=1), State(pc_initial=190 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi280.0']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=LOAD_FAST(arg=6, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi280.0']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=11, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$scale280.1']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=BINARY_SUBTRACT(arg=None, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$scale280.1', '$frac282.2']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=STORE_FAST(arg=11, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$284binary_subtract.3']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=LOAD_FAST(arg=11, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi280.0']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=LOAD_FAST(arg=5, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$frac288.4']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=BINARY_MULTIPLY(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$frac288.4', '$num_table290.5']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=STORE_FAST(arg=12, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$292binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi280.0']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_FAST(arg=12, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$296load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=CALL_FUNCTION(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$296load_global.7', '$index_frac298.8']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=STORE_FAST(arg=13, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$300call_function.9']
DEBUG:numba.core.byteflow:dispatch pc=304, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG:numba.core.byteflow:stack ['$phi280.0']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=LOAD_FAST(arg=13, lineno=57)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$index_frac304.10']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=BINARY_SUBTRACT(arg=None, lineno=57)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$index_frac304.10', '$offset306.11']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=STORE_FAST(arg=14, lineno=57)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$308binary_subtract.12']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_GLOBAL(arg=0, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_FAST(arg=17, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=10, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13', '$n_orig314.14']
DEBUG:numba.core.byteflow:dispatch pc=318, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13', '$n_orig314.14', '$n316.15']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=LOAD_CONST(arg=4, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13', '$318binary_subtract.16']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13', '$318binary_subtract.16', '$const320.17']
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13', '$322binary_subtract.18']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=13, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13', '$322binary_subtract.18', '$nwin324.19']
DEBUG:numba.core.byteflow:dispatch pc=328, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13', '$322binary_subtract.18', '$nwin324.19', '$offset326.20']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_FAST(arg=8, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13', '$322binary_subtract.18', '$328binary_subtract.21']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13', '$322binary_subtract.18', '$328binary_subtract.21', '$index_step330.22']
DEBUG:numba.core.byteflow:dispatch pc=334, inst=CALL_FUNCTION(arg=2, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$312load_global.13', '$322binary_subtract.18', '$332binary_floor_divide.23']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=STORE_FAST(arg=24, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$334call_function.24']
DEBUG:numba.core.byteflow:dispatch pc=338, inst=LOAD_GLOBAL(arg=3, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi280.0']
DEBUG:numba.core.byteflow:dispatch pc=340, inst=LOAD_FAST(arg=24, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$338load_global.25']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=CALL_FUNCTION(arg=1, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$338load_global.25', '$k_max340.26']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=GET_ITER(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi280.0', '$342call_function.27']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=346, stack=('$phi280.0', '$344get_iter.28'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=190 nstack_initial=3), State(pc_initial=346 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi190.0', '$phi190.1', '$phi190.2']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=STORE_FAST(arg=22, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$phi190.2']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$interp_win192.3']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$interp_win192.3', '$offset194.4']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$interp_win192.3', '$offset194.4', '$i196.5']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$interp_win192.3', '$offset194.4', '$i196.5', '$index_step198.6']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$interp_win192.3', '$offset194.4', '$200binary_multiply.7']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$interp_win192.3', '$202binary_add.8']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=14, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$204binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=4, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$204binary_subscr.9', '$eta206.10']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$204binary_subscr.9', '$eta206.10', '$interp_delta208.11']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$204binary_subscr.9', '$eta206.10', '$interp_delta208.11', '$offset210.12']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$204binary_subscr.9', '$eta206.10', '$interp_delta208.11', '$offset210.12', '$i212.13']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$204binary_subscr.9', '$eta206.10', '$interp_delta208.11', '$offset210.12', '$i212.13', '$index_step214.14']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$204binary_subscr.9', '$eta206.10', '$interp_delta208.11', '$offset210.12', '$216binary_multiply.15']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$204binary_subscr.9', '$eta206.10', '$interp_delta208.11', '$218binary_add.16']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$204binary_subscr.9', '$eta206.10', '$220binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$204binary_subscr.9', '$222binary_multiply.18']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=STORE_FAST(arg=15, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$224binary_add.19']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_GLOBAL(arg=3, lineno=46)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=19, lineno=46)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$228load_global.20']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=CALL_FUNCTION(arg=1, lineno=46)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$228load_global.20', '$n_channels230.21']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=GET_ITER(arg=None, lineno=46)
DEBUG:numba.core.byteflow:stack ['$phi190.0', '$phi190.1', '$232call_function.22']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=236, stack=('$phi190.0', '$phi190.1', '$234get_iter.23'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=346 nstack_initial=2), State(pc_initial=236 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi346.0', '$phi346.1']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=FOR_ITER(arg=98, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi346.0', '$phi346.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=446, stack=('$phi346.0',), blockstack=(), npush=0), Edge(pc=348, stack=('$phi346.0', '$phi346.1', '$346for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=236 nstack_initial=3), State(pc_initial=446 nstack_initial=1), State(pc_initial=348 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi236.0', '$phi236.1', '$phi236.2']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=FOR_ITER(arg=40, lineno=46)
DEBUG:numba.core.byteflow:stack ['$phi236.0', '$phi236.1', '$phi236.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=278, stack=('$phi236.0', '$phi236.1'), blockstack=(), npush=0), Edge(pc=238, stack=('$phi236.0', '$phi236.1', '$phi236.2', '$236for_iter.4'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=446 nstack_initial=1), State(pc_initial=348 nstack_initial=3), State(pc_initial=278 nstack_initial=2), State(pc_initial=238 nstack_initial=4)])
DEBUG:numba.core.byteflow:stack: ['$phi446.0']
DEBUG:numba.core.byteflow:dispatch pc=446, inst=LOAD_FAST(arg=9, lineno=67)
DEBUG:numba.core.byteflow:stack ['$phi446.0']
DEBUG:numba.core.byteflow:dispatch pc=448, inst=LOAD_FAST(arg=7, lineno=67)
DEBUG:numba.core.byteflow:stack ['$phi446.0', '$time_register446.1']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=INPLACE_ADD(arg=None, lineno=67)
DEBUG:numba.core.byteflow:stack ['$phi446.0', '$time_register446.1', '$time_increment448.2']
DEBUG:numba.core.byteflow:dispatch pc=452, inst=STORE_FAST(arg=9, lineno=67)
DEBUG:numba.core.byteflow:stack ['$phi446.0', '$450inplace_add.3']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=JUMP_ABSOLUTE(arg=108, lineno=67)
DEBUG:numba.core.byteflow:stack ['$phi446.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=108, stack=('$phi446.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=348 nstack_initial=3), State(pc_initial=278 nstack_initial=2), State(pc_initial=238 nstack_initial=4), State(pc_initial=108 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi348.0', '$phi348.1', '$phi348.2']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=STORE_FAST(arg=25, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$phi348.2']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=LOAD_FAST(arg=3, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1']
DEBUG:numba.core.byteflow:dispatch pc=352, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$interp_win350.3']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$interp_win350.3', '$offset352.4']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$interp_win350.3', '$offset352.4', '$k354.5']
DEBUG:numba.core.byteflow:dispatch pc=358, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$interp_win350.3', '$offset352.4', '$k354.5', '$index_step356.6']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$interp_win350.3', '$offset352.4', '$358binary_multiply.7']
DEBUG:numba.core.byteflow:dispatch pc=362, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$interp_win350.3', '$360binary_add.8']
DEBUG:numba.core.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=14, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$362binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=4, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$362binary_subscr.9', '$eta364.10']
DEBUG:numba.core.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$362binary_subscr.9', '$eta364.10', '$interp_delta366.11']
DEBUG:numba.core.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$362binary_subscr.9', '$eta364.10', '$interp_delta366.11', '$offset368.12']
DEBUG:numba.core.byteflow:dispatch pc=372, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$362binary_subscr.9', '$eta364.10', '$interp_delta366.11', '$offset368.12', '$k370.13']
DEBUG:numba.core.byteflow:dispatch pc=374, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$362binary_subscr.9', '$eta364.10', '$interp_delta366.11', '$offset368.12', '$k370.13', '$index_step372.14']
DEBUG:numba.core.byteflow:dispatch pc=376, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$362binary_subscr.9', '$eta364.10', '$interp_delta366.11', '$offset368.12', '$374binary_multiply.15']
DEBUG:numba.core.byteflow:dispatch pc=378, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$362binary_subscr.9', '$eta364.10', '$interp_delta366.11', '$376binary_add.16']
DEBUG:numba.core.byteflow:dispatch pc=380, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$362binary_subscr.9', '$eta364.10', '$378binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=382, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$362binary_subscr.9', '$380binary_multiply.18']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=STORE_FAST(arg=15, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$382binary_add.19']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1']
DEBUG:numba.core.byteflow:dispatch pc=388, inst=LOAD_FAST(arg=19, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$386load_global.20']
DEBUG:numba.core.byteflow:dispatch pc=390, inst=CALL_FUNCTION(arg=1, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$386load_global.20', '$n_channels388.21']
DEBUG:numba.core.byteflow:dispatch pc=392, inst=GET_ITER(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi348.0', '$phi348.1', '$390call_function.22']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=394, stack=('$phi348.0', '$phi348.1', '$392get_iter.23'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=278 nstack_initial=2), State(pc_initial=238 nstack_initial=4), State(pc_initial=108 nstack_initial=1), State(pc_initial=394 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi278.0', '$phi278.1']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=JUMP_ABSOLUTE(arg=188, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi278.0', '$phi278.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=('$phi278.0', '$phi278.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=238 nstack_initial=4), State(pc_initial=108 nstack_initial=1), State(pc_initial=394 nstack_initial=3), State(pc_initial=188 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi238.0', '$phi238.1', '$phi238.2', '$phi238.3']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=STORE_FAST(arg=23, lineno=46)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$phi238.3']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$t242.5']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$t242.5', '$j244.6']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=DUP_TOP_TWO(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$248dup_top_two.8', '$248dup_top_two.9']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=15, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$250binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$250binary_subscr.10', '$weight252.11']
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=10, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$250binary_subscr.10', '$weight252.11', '$x254.12']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=LOAD_FAST(arg=22, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$250binary_subscr.10', '$weight252.11', '$x254.12', '$n256.13']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=BINARY_SUBTRACT(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$250binary_subscr.10', '$weight252.11', '$x254.12', '$n256.13', '$i258.14']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$250binary_subscr.10', '$weight252.11', '$x254.12', '$260binary_subtract.15']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$250binary_subscr.10', '$weight252.11', '$x254.12', '$260binary_subtract.15', '$j262.16']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$250binary_subscr.10', '$weight252.11', '$x254.12', '$264build_tuple.17']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=BINARY_MULTIPLY(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$250binary_subscr.10', '$weight252.11', '$266binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=270, inst=INPLACE_ADD(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$250binary_subscr.10', '$268binary_multiply.19']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=ROT_THREE(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$y240.4', '$246build_tuple.7', '$270inplace_add.20']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2', '$270inplace_add.20', '$y240.4', '$246build_tuple.7']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=JUMP_ABSOLUTE(arg=236, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$phi238.1', '$phi238.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=236, stack=('$phi238.0', '$phi238.1', '$phi238.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=1), State(pc_initial=394 nstack_initial=3), State(pc_initial=188 nstack_initial=2), State(pc_initial=236 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=394 nstack_initial=3), State(pc_initial=188 nstack_initial=2), State(pc_initial=236 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi394.0', '$phi394.1', '$phi394.2']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=FOR_ITER(arg=46, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$phi394.1', '$phi394.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=442, stack=('$phi394.0', '$phi394.1'), blockstack=(), npush=0), Edge(pc=396, stack=('$phi394.0', '$phi394.1', '$phi394.2', '$394for_iter.4'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=2), State(pc_initial=236 nstack_initial=3), State(pc_initial=442 nstack_initial=2), State(pc_initial=396 nstack_initial=4)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=236 nstack_initial=3), State(pc_initial=442 nstack_initial=2), State(pc_initial=396 nstack_initial=4)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=442 nstack_initial=2), State(pc_initial=396 nstack_initial=4)])
DEBUG:numba.core.byteflow:stack: ['$phi442.0', '$phi442.1']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=JUMP_ABSOLUTE(arg=346, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=346, stack=('$phi442.0', '$phi442.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=396 nstack_initial=4), State(pc_initial=346 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi396.0', '$phi396.1', '$phi396.2', '$phi396.3']
DEBUG:numba.core.byteflow:dispatch pc=396, inst=STORE_FAST(arg=23, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$phi396.3']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_FAST(arg=1, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=LOAD_FAST(arg=20, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$t400.5']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$t400.5', '$j402.6']
DEBUG:numba.core.byteflow:dispatch pc=406, inst=DUP_TOP_TWO(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$406dup_top_two.8', '$406dup_top_two.9']
DEBUG:numba.core.byteflow:dispatch pc=410, inst=LOAD_FAST(arg=15, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$weight410.11']
DEBUG:numba.core.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=10, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$weight410.11', '$x412.12']
DEBUG:numba.core.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=25, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$weight410.11', '$x412.12', '$n414.13']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$weight410.11', '$x412.12', '$n414.13', '$k416.14']
DEBUG:numba.core.byteflow:dispatch pc=420, inst=LOAD_CONST(arg=4, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$weight410.11', '$x412.12', '$418binary_add.15']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$weight410.11', '$x412.12', '$418binary_add.15', '$const420.16']
DEBUG:numba.core.byteflow:dispatch pc=424, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$weight410.11', '$x412.12', '$422binary_add.17']
DEBUG:numba.core.byteflow:dispatch pc=426, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$weight410.11', '$x412.12', '$422binary_add.17', '$j424.18']
DEBUG:numba.core.byteflow:dispatch pc=428, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$weight410.11', '$x412.12', '$426build_tuple.19']
DEBUG:numba.core.byteflow:dispatch pc=430, inst=BINARY_MULTIPLY(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$weight410.11', '$428binary_subscr.20']
DEBUG:numba.core.byteflow:dispatch pc=432, inst=INPLACE_ADD(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$408binary_subscr.10', '$430binary_multiply.21']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=ROT_THREE(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$y398.4', '$404build_tuple.7', '$432inplace_add.22']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=STORE_SUBSCR(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2', '$432inplace_add.22', '$y398.4', '$404build_tuple.7']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=JUMP_ABSOLUTE(arg=394, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi396.0', '$phi396.1', '$phi396.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=394, stack=('$phi396.0', '$phi396.1', '$phi396.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=346 nstack_initial=2), State(pc_initial=394 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=394 nstack_initial=3)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=108 nstack_initial=1): {'$phi108.0'},
             State(pc_initial=112 nstack_initial=2): {'$phi112.1'},
             State(pc_initial=188 nstack_initial=2): {'$phi188.1'},
             State(pc_initial=190 nstack_initial=3): {'$phi190.2'},
             State(pc_initial=236 nstack_initial=3): {'$phi236.2'},
             State(pc_initial=238 nstack_initial=4): {'$phi238.3'},
             State(pc_initial=278 nstack_initial=2): set(),
             State(pc_initial=280 nstack_initial=1): set(),
             State(pc_initial=346 nstack_initial=2): {'$phi346.1'},
             State(pc_initial=348 nstack_initial=3): {'$phi348.2'},
             State(pc_initial=394 nstack_initial=3): {'$phi394.2'},
             State(pc_initial=396 nstack_initial=4): {'$phi396.3'},
             State(pc_initial=442 nstack_initial=2): set(),
             State(pc_initial=446 nstack_initial=1): set(),
             State(pc_initial=456 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi108.0': State(pc_initial=0 nstack_initial=0),
 '$phi112.1': State(pc_initial=108 nstack_initial=1),
 '$phi188.1': State(pc_initial=112 nstack_initial=2),
 '$phi190.2': State(pc_initial=188 nstack_initial=2),
 '$phi236.2': State(pc_initial=190 nstack_initial=3),
 '$phi238.3': State(pc_initial=236 nstack_initial=3),
 '$phi346.1': State(pc_initial=280 nstack_initial=1),
 '$phi348.2': State(pc_initial=346 nstack_initial=2),
 '$phi394.2': State(pc_initial=348 nstack_initial=3),
 '$phi396.3': State(pc_initial=394 nstack_initial=3)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi108.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi446.0',
                            State(pc_initial=446 nstack_initial=1))},
             '$phi112.0': {('$phi108.0',
                            State(pc_initial=108 nstack_initial=1))},
             '$phi112.1': {('$108for_iter.2',
                            State(pc_initial=108 nstack_initial=1))},
             '$phi188.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=2)),
                           ('$phi278.0',
                            State(pc_initial=278 nstack_initial=2))},
             '$phi188.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2)),
                           ('$phi278.1',
                            State(pc_initial=278 nstack_initial=2))},
             '$phi190.0': {('$phi188.0',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi190.1': {('$phi188.1',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi190.2': {('$188for_iter.3',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi236.0': {('$phi190.0',
                            State(pc_initial=190 nstack_initial=3)),
                           ('$phi238.0',
                            State(pc_initial=238 nstack_initial=4))},
             '$phi236.1': {('$phi190.1',
                            State(pc_initial=190 nstack_initial=3)),
                           ('$phi238.1',
                            State(pc_initial=238 nstack_initial=4))},
             '$phi236.2': {('$234get_iter.23',
                            State(pc_initial=190 nstack_initial=3)),
                           ('$phi238.2',
                            State(pc_initial=238 nstack_initial=4))},
             '$phi238.0': {('$phi236.0',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi238.1': {('$phi236.1',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi238.2': {('$phi236.2',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi238.3': {('$236for_iter.4',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi278.0': {('$phi236.0',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi278.1': {('$phi236.1',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi280.0': {('$phi188.0',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi346.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=1)),
                           ('$phi442.0',
                            State(pc_initial=442 nstack_initial=2))},
             '$phi346.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1)),
                           ('$phi442.1',
                            State(pc_initial=442 nstack_initial=2))},
             '$phi348.0': {('$phi346.0',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi348.1': {('$phi346.1',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi348.2': {('$346for_iter.3',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi394.0': {('$phi348.0',
                            State(pc_initial=348 nstack_initial=3)),
                           ('$phi396.0',
                            State(pc_initial=396 nstack_initial=4))},
             '$phi394.1': {('$phi348.1',
                            State(pc_initial=348 nstack_initial=3)),
                           ('$phi396.1',
                            State(pc_initial=396 nstack_initial=4))},
             '$phi394.2': {('$392get_iter.23',
                            State(pc_initial=348 nstack_initial=3)),
                           ('$phi396.2',
                            State(pc_initial=396 nstack_initial=4))},
             '$phi396.0': {('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi396.1': {('$phi394.1',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi396.2': {('$phi394.2',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi396.3': {('$394for_iter.4',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi442.0': {('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi442.1': {('$phi394.1',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi446.0': {('$phi346.0',
                            State(pc_initial=346 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi108.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi346.0',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi112.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi346.0',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi112.1': {('$108for_iter.2',
                            State(pc_initial=108 nstack_initial=1))},
             '$phi188.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3)),
                           ('$phi346.0',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi188.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2)),
                           ('$phi236.1',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi190.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3)),
                           ('$phi346.0',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi190.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2)),
                           ('$phi236.1',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi190.2': {('$188for_iter.3',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi236.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3)),
                           ('$phi346.0',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi236.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2)),
                           ('$phi236.1',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi236.2': {('$234get_iter.23',
                            State(pc_initial=190 nstack_initial=3)),
                           ('$phi236.2',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi238.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi346.0',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi238.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi238.2': {('$234get_iter.23',
                            State(pc_initial=190 nstack_initial=3))},
             '$phi238.3': {('$236for_iter.4',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi278.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi346.0',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi278.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi280.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3)),
                           ('$phi346.0',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi346.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3)),
                           ('$phi346.0',
                            State(pc_initial=346 nstack_initial=2)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi346.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1)),
                           ('$phi394.1',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi348.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi348.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1)),
                           ('$phi394.1',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi348.2': {('$346for_iter.3',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi394.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi394.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1)),
                           ('$phi394.1',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi394.2': {('$392get_iter.23',
                            State(pc_initial=348 nstack_initial=3)),
                           ('$phi394.2',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi396.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi396.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi396.2': {('$392get_iter.23',
                            State(pc_initial=348 nstack_initial=3))},
             '$phi396.3': {('$394for_iter.4',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi442.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi442.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi446.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi108.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi112.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi236.0',
                            State(pc_initial=236 nstack_initial=3)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi112.1': {('$108for_iter.2',
                            State(pc_initial=108 nstack_initial=1))},
             '$phi188.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi188.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi190.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi190.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi190.2': {('$188for_iter.3',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi236.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi236.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi236.2': {('$234get_iter.23',
                            State(pc_initial=190 nstack_initial=3))},
             '$phi238.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi238.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi238.2': {('$234get_iter.23',
                            State(pc_initial=190 nstack_initial=3))},
             '$phi238.3': {('$236for_iter.4',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi278.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi278.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi280.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi394.0',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi346.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi346.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi348.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi348.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi348.2': {('$346for_iter.3',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi394.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi394.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi394.2': {('$392get_iter.23',
                            State(pc_initial=348 nstack_initial=3))},
             '$phi396.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi396.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi396.2': {('$392get_iter.23',
                            State(pc_initial=348 nstack_initial=3))},
             '$phi396.3': {('$394for_iter.4',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi442.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi442.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi446.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi108.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi112.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi112.1': {('$108for_iter.2',
                            State(pc_initial=108 nstack_initial=1))},
             '$phi188.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi188.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi190.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi190.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi190.2': {('$188for_iter.3',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi236.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi236.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi236.2': {('$234get_iter.23',
                            State(pc_initial=190 nstack_initial=3))},
             '$phi238.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi238.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi238.2': {('$234get_iter.23',
                            State(pc_initial=190 nstack_initial=3))},
             '$phi238.3': {('$236for_iter.4',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi278.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi278.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi280.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi346.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi346.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi348.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi348.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi348.2': {('$346for_iter.3',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi394.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi394.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi394.2': {('$392get_iter.23',
                            State(pc_initial=348 nstack_initial=3))},
             '$phi396.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi396.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi396.2': {('$392get_iter.23',
                            State(pc_initial=348 nstack_initial=3))},
             '$phi396.3': {('$394for_iter.4',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi442.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi442.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi446.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi108.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi112.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi112.1': {('$108for_iter.2',
                            State(pc_initial=108 nstack_initial=1))},
             '$phi188.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi188.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi190.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi190.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi190.2': {('$188for_iter.3',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi236.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi236.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi236.2': {('$234get_iter.23',
                            State(pc_initial=190 nstack_initial=3))},
             '$phi238.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi238.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi238.2': {('$234get_iter.23',
                            State(pc_initial=190 nstack_initial=3))},
             '$phi238.3': {('$236for_iter.4',
                            State(pc_initial=236 nstack_initial=3))},
             '$phi278.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi278.1': {('$186get_iter.32',
                            State(pc_initial=112 nstack_initial=2))},
             '$phi280.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi346.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi346.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi348.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi348.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi348.2': {('$346for_iter.3',
                            State(pc_initial=346 nstack_initial=2))},
             '$phi394.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi394.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi394.2': {('$392get_iter.23',
                            State(pc_initial=348 nstack_initial=3))},
             '$phi396.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi396.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi396.2': {('$392get_iter.23',
                            State(pc_initial=348 nstack_initial=3))},
             '$phi396.3': {('$394for_iter.4',
                            State(pc_initial=394 nstack_initial=3))},
             '$phi442.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi442.1': {('$344get_iter.28',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi446.0': {('$106get_iter.38',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi108.0': {('$106get_iter.38', State(pc_initial=0 nstack_initial=0))},
 '$phi112.1': {('$108for_iter.2', State(pc_initial=108 nstack_initial=1))},
 '$phi188.1': {('$186get_iter.32', State(pc_initial=112 nstack_initial=2))},
 '$phi190.2': {('$188for_iter.3', State(pc_initial=188 nstack_initial=2))},
 '$phi236.2': {('$234get_iter.23', State(pc_initial=190 nstack_initial=3))},
 '$phi238.3': {('$236for_iter.4', State(pc_initial=236 nstack_initial=3))},
 '$phi346.1': {('$344get_iter.28', State(pc_initial=280 nstack_initial=1))},
 '$phi348.2': {('$346for_iter.3', State(pc_initial=346 nstack_initial=2))},
 '$phi394.2': {('$392get_iter.23', State(pc_initial=348 nstack_initial=3))},
 '$phi396.3': {('$394for_iter.4', State(pc_initial=394 nstack_initial=3))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi108.0': '$106get_iter.38'},
             State(pc_initial=108 nstack_initial=1): {'$phi112.1': '$108for_iter.2'},
             State(pc_initial=112 nstack_initial=2): {'$phi188.1': '$186get_iter.32'},
             State(pc_initial=188 nstack_initial=2): {'$phi190.2': '$188for_iter.3'},
             State(pc_initial=190 nstack_initial=3): {'$phi236.2': '$234get_iter.23'},
             State(pc_initial=236 nstack_initial=3): {'$phi238.3': '$236for_iter.4'},
             State(pc_initial=280 nstack_initial=1): {'$phi346.1': '$344get_iter.28'},
             State(pc_initial=346 nstack_initial=2): {'$phi348.2': '$346for_iter.3'},
             State(pc_initial=348 nstack_initial=3): {'$phi394.2': '$392get_iter.23'},
             State(pc_initial=394 nstack_initial=3): {'$phi396.3': '$394for_iter.4'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$sample_ratio6.2'}), (8, {'func': '$2load_global.0', 'args': ['$const4.1', '$sample_ratio6.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$const12.4'}), (14, {'res': '$sample_ratio14.5'}), (16, {'lhs': '$const12.4', 'rhs': '$sample_ratio14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$20load_global.7'}), (22, {'res': '$scale22.8'}), (24, {'res': '$num_table24.9'}), (26, {'lhs': '$scale22.8', 'rhs': '$num_table24.9', 'res': '$26binary_multiply.10'}), (28, {'func': '$20load_global.7', 'args': ['$26binary_multiply.10'], 'res': '$28call_function.11'}), (30, {'value': '$28call_function.11'}), (32, {'res': '$const32.12'}), (34, {'value': '$const32.12'}), (36, {'res': '$const36.13'}), (38, {'value': '$const36.13'}), (40, {'res': '$const40.14'}), (42, {'value': '$const40.14'}), (44, {'res': '$const44.15'}), (46, {'value': '$const44.15'}), (48, {'res': '$const48.16'}), (50, {'value': '$const48.16'}), (52, {'res': '$const52.17'}), (54, {'value': '$const52.17'}), (56, {'res': '$const56.18'}), (58, {'value': '$const56.18'}), (60, {'res': '$interp_win60.19'}), (62, {'item': '$interp_win60.19', 'res': '$62load_attr.20'}), (64, {'res': '$const64.21'}), (66, {'index': '$const64.21', 'target': '$62load_attr.20', 'res': '$66binary_subscr.22'}), (68, {'value': '$66binary_subscr.22'}), (70, {'res': '$x70.23'}), (72, {'item': '$x70.23', 'res': '$72load_attr.24'}), (74, {'res': '$const74.25'}), (76, {'index': '$const74.25', 'target': '$72load_attr.24', 'res': '$76binary_subscr.26'}), (78, {'value': '$76binary_subscr.26'}), (80, {'res': '$y80.27'}), (82, {'item': '$y80.27', 'res': '$82load_attr.28'}), (84, {'res': '$const84.29'}), (86, {'index': '$const84.29', 'target': '$82load_attr.28', 'res': '$86binary_subscr.30'}), (88, {'value': '$86binary_subscr.30'}), (90, {'res': '$y90.31'}), (92, {'item': '$y90.31', 'res': '$92load_attr.32'}), (94, {'res': '$const94.33'}), (96, {'index': '$const94.33', 'target': '$92load_attr.32', 'res': '$96binary_subscr.34'}), (98, {'value': '$96binary_subscr.34'}), (100, {'res': '$100load_global.35'}), (102, {'res': '$n_out102.36'}), (104, {'func': '$100load_global.35', 'args': ['$n_out102.36'], 'res': '$104call_function.37'}), (106, {'value': '$104call_function.37', 'res': '$106get_iter.38'})), outgoing_phis={'$phi108.0': '$106get_iter.38'}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ('$106get_iter.38',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=108 nstack_initial=1):
AdaptBlockInfo(insts=((108, {'iterator': '$phi108.0', 'pair': '$108for_iter.1', 'indval': '$108for_iter.2', 'pred': '$108for_iter.3'}),), outgoing_phis={'$phi112.1': '$108for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={456: (), 112: ('$phi108.0', '$108for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=112 nstack_initial=2):
AdaptBlockInfo(insts=((112, {'value': '$phi112.1'}), (114, {'res': '$114load_global.2'}), (116, {'res': '$time_register116.3'}), (118, {'func': '$114load_global.2', 'args': ['$time_register116.3'], 'res': '$118call_function.4'}), (120, {'value': '$118call_function.4'}), (122, {'res': '$scale122.5'}), (124, {'res': '$time_register124.6'}), (126, {'res': '$n126.7'}), (128, {'lhs': '$time_register124.6', 'rhs': '$n126.7', 'res': '$128binary_subtract.8'}), (130, {'lhs': '$scale122.5', 'rhs': '$128binary_subtract.8', 'res': '$130binary_multiply.9'}), (132, {'value': '$130binary_multiply.9'}), (134, {'res': '$frac134.10'}), (136, {'res': '$num_table136.11'}), (138, {'lhs': '$frac134.10', 'rhs': '$num_table136.11', 'res': '$138binary_multiply.12'}), (140, {'value': '$138binary_multiply.12'}), (142, {'res': '$142load_global.13'}), (144, {'res': '$index_frac144.14'}), (146, {'func': '$142load_global.13', 'args': ['$index_frac144.14'], 'res': '$146call_function.15'}), (148, {'value': '$146call_function.15'}), (150, {'res': '$index_frac150.16'}), (152, {'res': '$offset152.17'}), (154, {'lhs': '$index_frac150.16', 'rhs': '$offset152.17', 'res': '$154binary_subtract.18'}), (156, {'value': '$154binary_subtract.18'}), (158, {'res': '$158load_global.19'}), (160, {'res': '$n160.20'}), (162, {'res': '$const162.21'}), (164, {'lhs': '$n160.20', 'rhs': '$const162.21', 'res': '$164binary_add.22'}), (166, {'res': '$nwin166.23'}), (168, {'res': '$offset168.24'}), (170, {'lhs': '$nwin166.23', 'rhs': '$offset168.24', 'res': '$170binary_subtract.25'}), (172, {'res': '$index_step172.26'}), (174, {'lhs': '$170binary_subtract.25', 'rhs': '$index_step172.26', 'res': '$174binary_floor_divide.27'}), (176, {'func': '$158load_global.19', 'args': ['$164binary_add.22', '$174binary_floor_divide.27'], 'res': '$176call_function.28'}), (178, {'value': '$176call_function.28'}), (180, {'res': '$180load_global.29'}), (182, {'res': '$i_max182.30'}), (184, {'func': '$180load_global.29', 'args': ['$i_max182.30'], 'res': '$184call_function.31'}), (186, {'value': '$184call_function.31', 'res': '$186get_iter.32'})), outgoing_phis={'$phi188.1': '$186get_iter.32'}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: ('$phi112.0', '$186get_iter.32')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=188 nstack_initial=2):
AdaptBlockInfo(insts=((188, {'iterator': '$phi188.1', 'pair': '$188for_iter.2', 'indval': '$188for_iter.3', 'pred': '$188for_iter.4'}),), outgoing_phis={'$phi190.2': '$188for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi188.0',), 190: ('$phi188.0', '$phi188.1', '$188for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=190 nstack_initial=3):
AdaptBlockInfo(insts=((190, {'value': '$phi190.2'}), (192, {'res': '$interp_win192.3'}), (194, {'res': '$offset194.4'}), (196, {'res': '$i196.5'}), (198, {'res': '$index_step198.6'}), (200, {'lhs': '$i196.5', 'rhs': '$index_step198.6', 'res': '$200binary_multiply.7'}), (202, {'lhs': '$offset194.4', 'rhs': '$200binary_multiply.7', 'res': '$202binary_add.8'}), (204, {'index': '$202binary_add.8', 'target': '$interp_win192.3', 'res': '$204binary_subscr.9'}), (206, {'res': '$eta206.10'}), (208, {'res': '$interp_delta208.11'}), (210, {'res': '$offset210.12'}), (212, {'res': '$i212.13'}), (214, {'res': '$index_step214.14'}), (216, {'lhs': '$i212.13', 'rhs': '$index_step214.14', 'res': '$216binary_multiply.15'}), (218, {'lhs': '$offset210.12', 'rhs': '$216binary_multiply.15', 'res': '$218binary_add.16'}), (220, {'index': '$218binary_add.16', 'target': '$interp_delta208.11', 'res': '$220binary_subscr.17'}), (222, {'lhs': '$eta206.10', 'rhs': '$220binary_subscr.17', 'res': '$222binary_multiply.18'}), (224, {'lhs': '$204binary_subscr.9', 'rhs': '$222binary_multiply.18', 'res': '$224binary_add.19'}), (226, {'value': '$224binary_add.19'}), (228, {'res': '$228load_global.20'}), (230, {'res': '$n_channels230.21'}), (232, {'func': '$228load_global.20', 'args': ['$n_channels230.21'], 'res': '$232call_function.22'}), (234, {'value': '$232call_function.22', 'res': '$234get_iter.23'})), outgoing_phis={'$phi236.2': '$234get_iter.23'}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: ('$phi190.0', '$phi190.1', '$234get_iter.23')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=236 nstack_initial=3):
AdaptBlockInfo(insts=((236, {'iterator': '$phi236.2', 'pair': '$236for_iter.3', 'indval': '$236for_iter.4', 'pred': '$236for_iter.5'}),), outgoing_phis={'$phi238.3': '$236for_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={278: ('$phi236.0', '$phi236.1'), 238: ('$phi236.0', '$phi236.1', '$phi236.2', '$236for_iter.4')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=238 nstack_initial=4):
AdaptBlockInfo(insts=((238, {'value': '$phi238.3'}), (240, {'res': '$y240.4'}), (242, {'res': '$t242.5'}), (244, {'res': '$j244.6'}), (246, {'items': ['$t242.5', '$j244.6'], 'res': '$246build_tuple.7'}), (248, {'orig': ['$y240.4', '$246build_tuple.7'], 'duped': ['$248dup_top_two.8', '$248dup_top_two.9']}), (250, {'index': '$248dup_top_two.9', 'target': '$248dup_top_two.8', 'res': '$250binary_subscr.10'}), (252, {'res': '$weight252.11'}), (254, {'res': '$x254.12'}), (256, {'res': '$n256.13'}), (258, {'res': '$i258.14'}), (260, {'lhs': '$n256.13', 'rhs': '$i258.14', 'res': '$260binary_subtract.15'}), (262, {'res': '$j262.16'}), (264, {'items': ['$260binary_subtract.15', '$j262.16'], 'res': '$264build_tuple.17'}), (266, {'index': '$264build_tuple.17', 'target': '$x254.12', 'res': '$266binary_subscr.18'}), (268, {'lhs': '$weight252.11', 'rhs': '$266binary_subscr.18', 'res': '$268binary_multiply.19'}), (270, {'lhs': '$250binary_subscr.10', 'rhs': '$268binary_multiply.19', 'res': '$270inplace_add.20'}), (274, {'target': '$y240.4', 'index': '$246build_tuple.7', 'value': '$270inplace_add.20'}), (276, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: ('$phi238.0', '$phi238.1', '$phi238.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=278 nstack_initial=2):
AdaptBlockInfo(insts=((278, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: ('$phi278.0', '$phi278.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=280 nstack_initial=1):
AdaptBlockInfo(insts=((280, {'res': '$scale280.1'}), (282, {'res': '$frac282.2'}), (284, {'lhs': '$scale280.1', 'rhs': '$frac282.2', 'res': '$284binary_subtract.3'}), (286, {'value': '$284binary_subtract.3'}), (288, {'res': '$frac288.4'}), (290, {'res': '$num_table290.5'}), (292, {'lhs': '$frac288.4', 'rhs': '$num_table290.5', 'res': '$292binary_multiply.6'}), (294, {'value': '$292binary_multiply.6'}), (296, {'res': '$296load_global.7'}), (298, {'res': '$index_frac298.8'}), (300, {'func': '$296load_global.7', 'args': ['$index_frac298.8'], 'res': '$300call_function.9'}), (302, {'value': '$300call_function.9'}), (304, {'res': '$index_frac304.10'}), (306, {'res': '$offset306.11'}), (308, {'lhs': '$index_frac304.10', 'rhs': '$offset306.11', 'res': '$308binary_subtract.12'}), (310, {'value': '$308binary_subtract.12'}), (312, {'res': '$312load_global.13'}), (314, {'res': '$n_orig314.14'}), (316, {'res': '$n316.15'}), (318, {'lhs': '$n_orig314.14', 'rhs': '$n316.15', 'res': '$318binary_subtract.16'}), (320, {'res': '$const320.17'}), (322, {'lhs': '$318binary_subtract.16', 'rhs': '$const320.17', 'res': '$322binary_subtract.18'}), (324, {'res': '$nwin324.19'}), (326, {'res': '$offset326.20'}), (328, {'lhs': '$nwin324.19', 'rhs': '$offset326.20', 'res': '$328binary_subtract.21'}), (330, {'res': '$index_step330.22'}), (332, {'lhs': '$328binary_subtract.21', 'rhs': '$index_step330.22', 'res': '$332binary_floor_divide.23'}), (334, {'func': '$312load_global.13', 'args': ['$322binary_subtract.18', '$332binary_floor_divide.23'], 'res': '$334call_function.24'}), (336, {'value': '$334call_function.24'}), (338, {'res': '$338load_global.25'}), (340, {'res': '$k_max340.26'}), (342, {'func': '$338load_global.25', 'args': ['$k_max340.26'], 'res': '$342call_function.27'}), (344, {'value': '$342call_function.27', 'res': '$344get_iter.28'})), outgoing_phis={'$phi346.1': '$344get_iter.28'}, blockstack=(), active_try_block=None, outgoing_edgepushed={346: ('$phi280.0', '$344get_iter.28')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=346 nstack_initial=2):
AdaptBlockInfo(insts=((346, {'iterator': '$phi346.1', 'pair': '$346for_iter.2', 'indval': '$346for_iter.3', 'pred': '$346for_iter.4'}),), outgoing_phis={'$phi348.2': '$346for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={446: ('$phi346.0',), 348: ('$phi346.0', '$phi346.1', '$346for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=348 nstack_initial=3):
AdaptBlockInfo(insts=((348, {'value': '$phi348.2'}), (350, {'res': '$interp_win350.3'}), (352, {'res': '$offset352.4'}), (354, {'res': '$k354.5'}), (356, {'res': '$index_step356.6'}), (358, {'lhs': '$k354.5', 'rhs': '$index_step356.6', 'res': '$358binary_multiply.7'}), (360, {'lhs': '$offset352.4', 'rhs': '$358binary_multiply.7', 'res': '$360binary_add.8'}), (362, {'index': '$360binary_add.8', 'target': '$interp_win350.3', 'res': '$362binary_subscr.9'}), (364, {'res': '$eta364.10'}), (366, {'res': '$interp_delta366.11'}), (368, {'res': '$offset368.12'}), (370, {'res': '$k370.13'}), (372, {'res': '$index_step372.14'}), (374, {'lhs': '$k370.13', 'rhs': '$index_step372.14', 'res': '$374binary_multiply.15'}), (376, {'lhs': '$offset368.12', 'rhs': '$374binary_multiply.15', 'res': '$376binary_add.16'}), (378, {'index': '$376binary_add.16', 'target': '$interp_delta366.11', 'res': '$378binary_subscr.17'}), (380, {'lhs': '$eta364.10', 'rhs': '$378binary_subscr.17', 'res': '$380binary_multiply.18'}), (382, {'lhs': '$362binary_subscr.9', 'rhs': '$380binary_multiply.18', 'res': '$382binary_add.19'}), (384, {'value': '$382binary_add.19'}), (386, {'res': '$386load_global.20'}), (388, {'res': '$n_channels388.21'}), (390, {'func': '$386load_global.20', 'args': ['$n_channels388.21'], 'res': '$390call_function.22'}), (392, {'value': '$390call_function.22', 'res': '$392get_iter.23'})), outgoing_phis={'$phi394.2': '$392get_iter.23'}, blockstack=(), active_try_block=None, outgoing_edgepushed={394: ('$phi348.0', '$phi348.1', '$392get_iter.23')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=394 nstack_initial=3):
AdaptBlockInfo(insts=((394, {'iterator': '$phi394.2', 'pair': '$394for_iter.3', 'indval': '$394for_iter.4', 'pred': '$394for_iter.5'}),), outgoing_phis={'$phi396.3': '$394for_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={442: ('$phi394.0', '$phi394.1'), 396: ('$phi394.0', '$phi394.1', '$phi394.2', '$394for_iter.4')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=396 nstack_initial=4):
AdaptBlockInfo(insts=((396, {'value': '$phi396.3'}), (398, {'res': '$y398.4'}), (400, {'res': '$t400.5'}), (402, {'res': '$j402.6'}), (404, {'items': ['$t400.5', '$j402.6'], 'res': '$404build_tuple.7'}), (406, {'orig': ['$y398.4', '$404build_tuple.7'], 'duped': ['$406dup_top_two.8', '$406dup_top_two.9']}), (408, {'index': '$406dup_top_two.9', 'target': '$406dup_top_two.8', 'res': '$408binary_subscr.10'}), (410, {'res': '$weight410.11'}), (412, {'res': '$x412.12'}), (414, {'res': '$n414.13'}), (416, {'res': '$k416.14'}), (418, {'lhs': '$n414.13', 'rhs': '$k416.14', 'res': '$418binary_add.15'}), (420, {'res': '$const420.16'}), (422, {'lhs': '$418binary_add.15', 'rhs': '$const420.16', 'res': '$422binary_add.17'}), (424, {'res': '$j424.18'}), (426, {'items': ['$422binary_add.17', '$j424.18'], 'res': '$426build_tuple.19'}), (428, {'index': '$426build_tuple.19', 'target': '$x412.12', 'res': '$428binary_subscr.20'}), (430, {'lhs': '$weight410.11', 'rhs': '$428binary_subscr.20', 'res': '$430binary_multiply.21'}), (432, {'lhs': '$408binary_subscr.10', 'rhs': '$430binary_multiply.21', 'res': '$432inplace_add.22'}), (436, {'target': '$y398.4', 'index': '$404build_tuple.7', 'value': '$432inplace_add.22'}), (438, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={394: ('$phi396.0', '$phi396.1', '$phi396.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=442 nstack_initial=2):
AdaptBlockInfo(insts=((442, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={346: ('$phi442.0', '$phi442.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=446 nstack_initial=1):
AdaptBlockInfo(insts=((446, {'res': '$time_register446.1'}), (448, {'res': '$time_increment448.2'}), (450, {'lhs': '$time_register446.1', 'rhs': '$time_increment448.2', 'res': '$450inplace_add.3'}), (452, {'value': '$450inplace_add.3'}), (454, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ('$phi446.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=456 nstack_initial=0):
AdaptBlockInfo(insts=((456, {'res': '$const456.0'}), (458, {'retval': '$const456.0', 'castval': '$458return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $2load_global.0 = global(min: <built-in function min>) ['$2load_global.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None) ['$2load_global.0', '$const4.1', 'sample_ratio', 'scale']
    $const12.4 = const(float, 1.0)           ['$const12.4']
    time_increment = $const12.4 / sample_ratio ['$const12.4', 'sample_ratio', 'time_increment']
    $20load_global.7 = global(int: <class 'int'>) ['$20load_global.7']
    $26binary_multiply.10 = scale * num_table ['$26binary_multiply.10', 'num_table', 'scale']
    index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None) ['$20load_global.7', '$26binary_multiply.10', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $62load_attr.20 = getattr(value=interp_win, attr=shape) ['$62load_attr.20', 'interp_win']
    $const64.21 = const(int, 0)              ['$const64.21']
    nwin = getitem(value=$62load_attr.20, index=$const64.21, fn=<built-in function getitem>) ['$62load_attr.20', '$const64.21', 'nwin']
    $72load_attr.24 = getattr(value=x, attr=shape) ['$72load_attr.24', 'x']
    $const74.25 = const(int, 0)              ['$const74.25']
    n_orig = getitem(value=$72load_attr.24, index=$const74.25, fn=<built-in function getitem>) ['$72load_attr.24', '$const74.25', 'n_orig']
    $82load_attr.28 = getattr(value=y, attr=shape) ['$82load_attr.28', 'y']
    $const84.29 = const(int, 0)              ['$const84.29']
    n_out = getitem(value=$82load_attr.28, index=$const84.29, fn=<built-in function getitem>) ['$82load_attr.28', '$const84.29', 'n_out']
    $92load_attr.32 = getattr(value=y, attr=shape) ['$92load_attr.32', 'y']
    $const94.33 = const(int, 1)              ['$const94.33']
    n_channels = getitem(value=$92load_attr.32, index=$const94.33, fn=<built-in function getitem>) ['$92load_attr.32', '$const94.33', 'n_channels']
    $100load_global.35 = global(range: <class 'range'>) ['$100load_global.35']
    $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None) ['$100load_global.35', '$104call_function.37', 'n_out']
    $106get_iter.38 = getiter(value=$104call_function.37) ['$104call_function.37', '$106get_iter.38']
    $phi108.0 = $106get_iter.38              ['$106get_iter.38', '$phi108.0']
    jump 108                                 []
label 108:
    $108for_iter.1 = iternext(value=$phi108.0) ['$108for_iter.1', '$phi108.0']
    $108for_iter.2 = pair_first(value=$108for_iter.1) ['$108for_iter.1', '$108for_iter.2']
    $108for_iter.3 = pair_second(value=$108for_iter.1) ['$108for_iter.1', '$108for_iter.3']
    $phi112.1 = $108for_iter.2               ['$108for_iter.2', '$phi112.1']
    branch $108for_iter.3, 112, 456          ['$108for_iter.3']
label 112:
    t = $phi112.1                            ['$phi112.1', 't']
    $114load_global.2 = global(int: <class 'int'>) ['$114load_global.2']
    n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None) ['$114load_global.2', 'n', 'time_register']
    $128binary_subtract.8 = time_register - n ['$128binary_subtract.8', 'n', 'time_register']
    frac = scale * $128binary_subtract.8     ['$128binary_subtract.8', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $142load_global.13 = global(int: <class 'int'>) ['$142load_global.13']
    offset = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None) ['$142load_global.13', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $158load_global.19 = global(min: <built-in function min>) ['$158load_global.19']
    $const162.21 = const(int, 1)             ['$const162.21']
    $164binary_add.22 = n + $const162.21     ['$164binary_add.22', '$const162.21', 'n']
    $170binary_subtract.25 = nwin - offset   ['$170binary_subtract.25', 'nwin', 'offset']
    $174binary_floor_divide.27 = $170binary_subtract.25 // index_step ['$170binary_subtract.25', '$174binary_floor_divide.27', 'index_step']
    i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None) ['$158load_global.19', '$164binary_add.22', '$174binary_floor_divide.27', 'i_max']
    $180load_global.29 = global(range: <class 'range'>) ['$180load_global.29']
    $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None) ['$180load_global.29', '$184call_function.31', 'i_max']
    $186get_iter.32 = getiter(value=$184call_function.31) ['$184call_function.31', '$186get_iter.32']
    $phi188.1 = $186get_iter.32              ['$186get_iter.32', '$phi188.1']
    jump 188                                 []
label 188:
    $188for_iter.2 = iternext(value=$phi188.1) ['$188for_iter.2', '$phi188.1']
    $188for_iter.3 = pair_first(value=$188for_iter.2) ['$188for_iter.2', '$188for_iter.3']
    $188for_iter.4 = pair_second(value=$188for_iter.2) ['$188for_iter.2', '$188for_iter.4']
    $phi190.2 = $188for_iter.3               ['$188for_iter.3', '$phi190.2']
    branch $188for_iter.4, 190, 280          ['$188for_iter.4']
label 190:
    i = $phi190.2                            ['$phi190.2', 'i']
    $200binary_multiply.7 = i * index_step   ['$200binary_multiply.7', 'i', 'index_step']
    $202binary_add.8 = offset + $200binary_multiply.7 ['$200binary_multiply.7', '$202binary_add.8', 'offset']
    $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>) ['$202binary_add.8', '$204binary_subscr.9', 'interp_win']
    $216binary_multiply.15 = i * index_step  ['$216binary_multiply.15', 'i', 'index_step']
    $218binary_add.16 = offset + $216binary_multiply.15 ['$216binary_multiply.15', '$218binary_add.16', 'offset']
    $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>) ['$218binary_add.16', '$220binary_subscr.17', 'interp_delta']
    $222binary_multiply.18 = eta * $220binary_subscr.17 ['$220binary_subscr.17', '$222binary_multiply.18', 'eta']
    weight = $204binary_subscr.9 + $222binary_multiply.18 ['$204binary_subscr.9', '$222binary_multiply.18', 'weight']
    $228load_global.20 = global(range: <class 'range'>) ['$228load_global.20']
    $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None) ['$228load_global.20', '$232call_function.22', 'n_channels']
    $234get_iter.23 = getiter(value=$232call_function.22) ['$232call_function.22', '$234get_iter.23']
    $phi236.2 = $234get_iter.23              ['$234get_iter.23', '$phi236.2']
    jump 236                                 []
label 236:
    $236for_iter.3 = iternext(value=$phi236.2) ['$236for_iter.3', '$phi236.2']
    $236for_iter.4 = pair_first(value=$236for_iter.3) ['$236for_iter.3', '$236for_iter.4']
    $236for_iter.5 = pair_second(value=$236for_iter.3) ['$236for_iter.3', '$236for_iter.5']
    $phi238.3 = $236for_iter.4               ['$236for_iter.4', '$phi238.3']
    branch $236for_iter.5, 238, 278          ['$236for_iter.5']
label 238:
    j = $phi238.3                            ['$phi238.3', 'j']
    $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$246build_tuple.7', 'j', 't']
    $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>) ['$246build_tuple.7', '$250binary_subscr.10', 'y']
    $260binary_subtract.15 = n - i           ['$260binary_subtract.15', 'i', 'n']
    $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)]) ['$260binary_subtract.15', '$264build_tuple.17', 'j']
    $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>) ['$264build_tuple.17', '$266binary_subscr.18', 'x']
    $268binary_multiply.19 = weight * $266binary_subscr.18 ['$266binary_subscr.18', '$268binary_multiply.19', 'weight']
    $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$250binary_subscr.10', '$268binary_multiply.19', '$270inplace_add.20']
    y[$246build_tuple.7] = $270inplace_add.20 ['$246build_tuple.7', '$270inplace_add.20', 'y']
    jump 236                                 []
label 278:
    jump 188                                 []
label 280:
    $284binary_subtract.3 = scale - frac     ['$284binary_subtract.3', 'frac', 'scale']
    frac = $284binary_subtract.3             ['$284binary_subtract.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $296load_global.7 = global(int: <class 'int'>) ['$296load_global.7']
    offset = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None) ['$296load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $312load_global.13 = global(min: <built-in function min>) ['$312load_global.13']
    $318binary_subtract.16 = n_orig - n      ['$318binary_subtract.16', 'n', 'n_orig']
    $const320.17 = const(int, 1)             ['$const320.17']
    $322binary_subtract.18 = $318binary_subtract.16 - $const320.17 ['$318binary_subtract.16', '$322binary_subtract.18', '$const320.17']
    $328binary_subtract.21 = nwin - offset   ['$328binary_subtract.21', 'nwin', 'offset']
    $332binary_floor_divide.23 = $328binary_subtract.21 // index_step ['$328binary_subtract.21', '$332binary_floor_divide.23', 'index_step']
    k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None) ['$312load_global.13', '$322binary_subtract.18', '$332binary_floor_divide.23', 'k_max']
    $338load_global.25 = global(range: <class 'range'>) ['$338load_global.25']
    $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None) ['$338load_global.25', '$342call_function.27', 'k_max']
    $344get_iter.28 = getiter(value=$342call_function.27) ['$342call_function.27', '$344get_iter.28']
    $phi346.1 = $344get_iter.28              ['$344get_iter.28', '$phi346.1']
    jump 346                                 []
label 346:
    $346for_iter.2 = iternext(value=$phi346.1) ['$346for_iter.2', '$phi346.1']
    $346for_iter.3 = pair_first(value=$346for_iter.2) ['$346for_iter.2', '$346for_iter.3']
    $346for_iter.4 = pair_second(value=$346for_iter.2) ['$346for_iter.2', '$346for_iter.4']
    $phi348.2 = $346for_iter.3               ['$346for_iter.3', '$phi348.2']
    branch $346for_iter.4, 348, 446          ['$346for_iter.4']
label 348:
    k = $phi348.2                            ['$phi348.2', 'k']
    $358binary_multiply.7 = k * index_step   ['$358binary_multiply.7', 'index_step', 'k']
    $360binary_add.8 = offset + $358binary_multiply.7 ['$358binary_multiply.7', '$360binary_add.8', 'offset']
    $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>) ['$360binary_add.8', '$362binary_subscr.9', 'interp_win']
    $374binary_multiply.15 = k * index_step  ['$374binary_multiply.15', 'index_step', 'k']
    $376binary_add.16 = offset + $374binary_multiply.15 ['$374binary_multiply.15', '$376binary_add.16', 'offset']
    $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>) ['$376binary_add.16', '$378binary_subscr.17', 'interp_delta']
    $380binary_multiply.18 = eta * $378binary_subscr.17 ['$378binary_subscr.17', '$380binary_multiply.18', 'eta']
    weight = $362binary_subscr.9 + $380binary_multiply.18 ['$362binary_subscr.9', '$380binary_multiply.18', 'weight']
    $386load_global.20 = global(range: <class 'range'>) ['$386load_global.20']
    $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None) ['$386load_global.20', '$390call_function.22', 'n_channels']
    $392get_iter.23 = getiter(value=$390call_function.22) ['$390call_function.22', '$392get_iter.23']
    $phi394.2 = $392get_iter.23              ['$392get_iter.23', '$phi394.2']
    jump 394                                 []
label 394:
    $394for_iter.3 = iternext(value=$phi394.2) ['$394for_iter.3', '$phi394.2']
    $394for_iter.4 = pair_first(value=$394for_iter.3) ['$394for_iter.3', '$394for_iter.4']
    $394for_iter.5 = pair_second(value=$394for_iter.3) ['$394for_iter.3', '$394for_iter.5']
    $phi396.3 = $394for_iter.4               ['$394for_iter.4', '$phi396.3']
    branch $394for_iter.5, 396, 442          ['$394for_iter.5']
label 396:
    j = $phi396.3                            ['$phi396.3', 'j']
    $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$404build_tuple.7', 'j', 't']
    $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>) ['$404build_tuple.7', '$408binary_subscr.10', 'y']
    $418binary_add.15 = n + k                ['$418binary_add.15', 'k', 'n']
    $const420.16 = const(int, 1)             ['$const420.16']
    $422binary_add.17 = $418binary_add.15 + $const420.16 ['$418binary_add.15', '$422binary_add.17', '$const420.16']
    $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j, interpn.py:46)]) ['$422binary_add.17', '$426build_tuple.19', 'j']
    $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>) ['$426build_tuple.19', '$428binary_subscr.20', 'x']
    $430binary_multiply.21 = weight * $428binary_subscr.20 ['$428binary_subscr.20', '$430binary_multiply.21', 'weight']
    $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined) ['$408binary_subscr.10', '$430binary_multiply.21', '$432inplace_add.22']
    y[$404build_tuple.7] = $432inplace_add.22 ['$404build_tuple.7', '$432inplace_add.22', 'y']
    jump 394                                 []
label 442:
    jump 346                                 []
label 446:
    $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$450inplace_add.3', 'time_increment', 'time_register']
    time_register = $450inplace_add.3        ['$450inplace_add.3', 'time_register']
    jump 108                                 []
label 456:
    $const456.0 = const(NoneType, None)      ['$const456.0']
    $458return_value.1 = cast(value=$const456.0) ['$458return_value.1', '$const456.0']
    return $458return_value.1                ['$458return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block analysis pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block analysis pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block analysis pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block analysis pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block analysis pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block analysis pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block analysis pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block analysis pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac
DEBUG:numba.core.ssa:on stmt: frac = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block analysis pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block analysis pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block analysis pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block analysis pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: j = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block analysis pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block analysis pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block analysis pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x000001C85FEEFC40>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100load_global.35': [<numba.core.ir.Assign object at 0x000001C85FECC190>],
             '$104call_function.37': [<numba.core.ir.Assign object at 0x000001C85FECC490>],
             '$106get_iter.38': [<numba.core.ir.Assign object at 0x000001C85FECC5B0>],
             '$108for_iter.1': [<numba.core.ir.Assign object at 0x000001C85FEC8A60>],
             '$108for_iter.2': [<numba.core.ir.Assign object at 0x000001C85FECA280>],
             '$108for_iter.3': [<numba.core.ir.Assign object at 0x000001C85FECABE0>],
             '$114load_global.2': [<numba.core.ir.Assign object at 0x000001C85FECC730>],
             '$128binary_subtract.8': [<numba.core.ir.Assign object at 0x000001C85FECCFA0>],
             '$142load_global.13': [<numba.core.ir.Assign object at 0x000001C85FED37F0>],
             '$158load_global.19': [<numba.core.ir.Assign object at 0x000001C85FED5190>],
             '$164binary_add.22': [<numba.core.ir.Assign object at 0x000001C85FED55E0>],
             '$170binary_subtract.25': [<numba.core.ir.Assign object at 0x000001C85FED59A0>],
             '$174binary_floor_divide.27': [<numba.core.ir.Assign object at 0x000001C85FED5C40>],
             '$180load_global.29': [<numba.core.ir.Assign object at 0x000001C85FED8070>],
             '$184call_function.31': [<numba.core.ir.Assign object at 0x000001C85FED8370>],
             '$186get_iter.32': [<numba.core.ir.Assign object at 0x000001C85FED8490>],
             '$188for_iter.2': [<numba.core.ir.Assign object at 0x000001C85FED33A0>],
             '$188for_iter.3': [<numba.core.ir.Assign object at 0x000001C85FED3640>],
             '$188for_iter.4': [<numba.core.ir.Assign object at 0x000001C85FED3A30>],
             '$200binary_multiply.7': [<numba.core.ir.Assign object at 0x000001C85FED8A00>],
             '$202binary_add.8': [<numba.core.ir.Assign object at 0x000001C85FED8B80>],
             '$204binary_subscr.9': [<numba.core.ir.Assign object at 0x000001C85FED8D00>],
             '$20load_global.7': [<numba.core.ir.Assign object at 0x000001C85FEC4B50>],
             '$216binary_multiply.15': [<numba.core.ir.Assign object at 0x000001C85FEDB460>],
             '$218binary_add.16': [<numba.core.ir.Assign object at 0x000001C85FEDB5E0>],
             '$220binary_subscr.17': [<numba.core.ir.Assign object at 0x000001C85FEDB760>],
             '$222binary_multiply.18': [<numba.core.ir.Assign object at 0x000001C85FEDB8E0>],
             '$228load_global.20': [<numba.core.ir.Assign object at 0x000001C85FEDBC70>],
             '$232call_function.22': [<numba.core.ir.Assign object at 0x000001C85FEDBF70>],
             '$234get_iter.23': [<numba.core.ir.Assign object at 0x000001C85FEDC0D0>],
             '$236for_iter.3': [<numba.core.ir.Assign object at 0x000001C85FEDB340>],
             '$236for_iter.4': [<numba.core.ir.Assign object at 0x000001C85FEDBE20>],
             '$236for_iter.5': [<numba.core.ir.Assign object at 0x000001C85FEDC220>],
             '$246build_tuple.7': [<numba.core.ir.Assign object at 0x000001C85FEDCA00>],
             '$250binary_subscr.10': [<numba.core.ir.Assign object at 0x000001C85FEDCD60>],
             '$260binary_subtract.15': [<numba.core.ir.Assign object at 0x000001C85FEE03A0>],
             '$264build_tuple.17': [<numba.core.ir.Assign object at 0x000001C85FEE0640>],
             '$266binary_subscr.18': [<numba.core.ir.Assign object at 0x000001C85FEE07C0>],
             '$268binary_multiply.19': [<numba.core.ir.Assign object at 0x000001C85FEE0940>],
             '$26binary_multiply.10': [<numba.core.ir.Assign object at 0x000001C85FEC4F40>],
             '$270inplace_add.20': [<numba.core.ir.Assign object at 0x000001C85FEE0AC0>],
             '$284binary_subtract.3': [<numba.core.ir.Assign object at 0x000001C85FEE0E80>],
             '$296load_global.7': [<numba.core.ir.Assign object at 0x000001C85FEE3550>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001C85FE82F10>],
             '$312load_global.13': [<numba.core.ir.Assign object at 0x000001C85FEE3EB0>],
             '$318binary_subtract.16': [<numba.core.ir.Assign object at 0x000001C85FEE42E0>],
             '$322binary_subtract.18': [<numba.core.ir.Assign object at 0x000001C85FEE45E0>],
             '$328binary_subtract.21': [<numba.core.ir.Assign object at 0x000001C85FEE49A0>],
             '$332binary_floor_divide.23': [<numba.core.ir.Assign object at 0x000001C85FEE4C40>],
             '$338load_global.25': [<numba.core.ir.Assign object at 0x000001C85FEE6070>],
             '$342call_function.27': [<numba.core.ir.Assign object at 0x000001C85FEE6370>],
             '$344get_iter.28': [<numba.core.ir.Assign object at 0x000001C85FEE6490>],
             '$346for_iter.2': [<numba.core.ir.Assign object at 0x000001C85FEE39D0>],
             '$346for_iter.3': [<numba.core.ir.Assign object at 0x000001C85FEE3BE0>],
             '$346for_iter.4': [<numba.core.ir.Assign object at 0x000001C85FEE46D0>],
             '$358binary_multiply.7': [<numba.core.ir.Assign object at 0x000001C85FEE6BE0>],
             '$360binary_add.8': [<numba.core.ir.Assign object at 0x000001C85FEE6D60>],
             '$362binary_subscr.9': [<numba.core.ir.Assign object at 0x000001C85FEE6EE0>],
             '$374binary_multiply.15': [<numba.core.ir.Assign object at 0x000001C85FEE9640>],
             '$376binary_add.16': [<numba.core.ir.Assign object at 0x000001C85FEE97C0>],
             '$378binary_subscr.17': [<numba.core.ir.Assign object at 0x000001C85FEE9940>],
             '$380binary_multiply.18': [<numba.core.ir.Assign object at 0x000001C85FEE9AC0>],
             '$386load_global.20': [<numba.core.ir.Assign object at 0x000001C85FEE9E50>],
             '$390call_function.22': [<numba.core.ir.Assign object at 0x000001C85FEEA190>],
             '$392get_iter.23': [<numba.core.ir.Assign object at 0x000001C85FEEA2B0>],
             '$394for_iter.3': [<numba.core.ir.Assign object at 0x000001C85FEE9520>],
             '$394for_iter.4': [<numba.core.ir.Assign object at 0x000001C85FEE3280>],
             '$394for_iter.5': [<numba.core.ir.Assign object at 0x000001C85FEEA400>],
             '$404build_tuple.7': [<numba.core.ir.Assign object at 0x000001C85FEEAB80>],
             '$408binary_subscr.10': [<numba.core.ir.Assign object at 0x000001C85FEEAEE0>],
             '$418binary_add.15': [<numba.core.ir.Assign object at 0x000001C85FEEC520>],
             '$422binary_add.17': [<numba.core.ir.Assign object at 0x000001C85FEEC820>],
             '$426build_tuple.19': [<numba.core.ir.Assign object at 0x000001C85FEECAC0>],
             '$428binary_subscr.20': [<numba.core.ir.Assign object at 0x000001C85FEECC40>],
             '$430binary_multiply.21': [<numba.core.ir.Assign object at 0x000001C85FEECDC0>],
             '$432inplace_add.22': [<numba.core.ir.Assign object at 0x000001C85FEECF40>],
             '$450inplace_add.3': [<numba.core.ir.Assign object at 0x000001C85FEEF340>],
             '$458return_value.1': [<numba.core.ir.Assign object at 0x000001C85FEEF790>],
             '$62load_attr.20': [<numba.core.ir.Assign object at 0x000001C85FECA730>],
             '$72load_attr.24': [<numba.core.ir.Assign object at 0x000001C85FECADF0>],
             '$82load_attr.28': [<numba.core.ir.Assign object at 0x000001C85FECB4F0>],
             '$92load_attr.32': [<numba.core.ir.Assign object at 0x000001C85FECBBB0>],
             '$const12.4': [<numba.core.ir.Assign object at 0x000001C85FEC4610>],
             '$const162.21': [<numba.core.ir.Assign object at 0x000001C85FED5430>],
             '$const320.17': [<numba.core.ir.Assign object at 0x000001C85FEE4430>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000001C85FEC40D0>],
             '$const420.16': [<numba.core.ir.Assign object at 0x000001C85FEEC670>],
             '$const456.0': [<numba.core.ir.Assign object at 0x000001C85FEEF610>],
             '$const64.21': [<numba.core.ir.Assign object at 0x000001C85FECA8B0>],
             '$const74.25': [<numba.core.ir.Assign object at 0x000001C85FECAF70>],
             '$const84.29': [<numba.core.ir.Assign object at 0x000001C85FECB670>],
             '$const94.33': [<numba.core.ir.Assign object at 0x000001C85FECBD30>],
             '$phi108.0': [<numba.core.ir.Assign object at 0x000001C85FEC4280>],
             '$phi112.1': [<numba.core.ir.Assign object at 0x000001C85FEC8520>],
             '$phi188.1': [<numba.core.ir.Assign object at 0x000001C85FECC8E0>],
             '$phi190.2': [<numba.core.ir.Assign object at 0x000001C85FED3280>],
             '$phi236.2': [<numba.core.ir.Assign object at 0x000001C85FED8580>],
             '$phi238.3': [<numba.core.ir.Assign object at 0x000001C85FEDB100>],
             '$phi346.1': [<numba.core.ir.Assign object at 0x000001C85FEE0490>],
             '$phi348.2': [<numba.core.ir.Assign object at 0x000001C85FEE38B0>],
             '$phi394.2': [<numba.core.ir.Assign object at 0x000001C85FEE6760>],
             '$phi396.3': [<numba.core.ir.Assign object at 0x000001C85FEE92E0>],
             'eta': [<numba.core.ir.Assign object at 0x000001C85FECA0D0>,
                     <numba.core.ir.Assign object at 0x000001C85FED3F40>,
                     <numba.core.ir.Assign object at 0x000001C85FEE3CA0>],
             'frac': [<numba.core.ir.Assign object at 0x000001C85FEC88B0>,
                      <numba.core.ir.Assign object at 0x000001C85FED3160>,
                      <numba.core.ir.Assign object at 0x000001C85FEE0F40>],
             'i': [<numba.core.ir.Assign object at 0x000001C85FED5A90>],
             'i_max': [<numba.core.ir.Assign object at 0x000001C85FED5DF0>],
             'index_frac': [<numba.core.ir.Assign object at 0x000001C85FEC8B50>,
                            <numba.core.ir.Assign object at 0x000001C85FED35E0>,
                            <numba.core.ir.Assign object at 0x000001C85FEE3340>],
             'index_step': [<numba.core.ir.Assign object at 0x000001C85FEC8130>],
             'interp_delta': [<numba.core.ir.Assign object at 0x000001C85FE82730>],
             'interp_win': [<numba.core.ir.Assign object at 0x000001C85FE82370>],
             'j': [<numba.core.ir.Assign object at 0x000001C85FEDC4F0>,
                   <numba.core.ir.Assign object at 0x000001C85FEEA6A0>],
             'k': [<numba.core.ir.Assign object at 0x000001C85FEE65B0>],
             'k_max': [<numba.core.ir.Assign object at 0x000001C85FEE4DF0>],
             'n': [<numba.core.ir.Assign object at 0x000001C85FEC8610>,
                   <numba.core.ir.Assign object at 0x000001C85FECCA30>],
             'n_channels': [<numba.core.ir.Assign object at 0x000001C85FF10310>],
             'n_orig': [<numba.core.ir.Assign object at 0x000001C85FF10BE0>],
             'n_out': [<numba.core.ir.Assign object at 0x000001C85FF10B80>],
             'num_table': [<numba.core.ir.Assign object at 0x000001C85FE82C70>],
             'nwin': [<numba.core.ir.Assign object at 0x000001C85FF10BB0>],
             'offset': [<numba.core.ir.Assign object at 0x000001C85FEC8DF0>,
                        <numba.core.ir.Assign object at 0x000001C85FED3AF0>,
                        <numba.core.ir.Assign object at 0x000001C85FEE3850>],
             'sample_ratio': [<numba.core.ir.Assign object at 0x000001C85FE82CA0>],
             'scale': [<numba.core.ir.Assign object at 0x000001C85FEC43D0>],
             't': [<numba.core.ir.Assign object at 0x000001C85FECC0A0>],
             'time_increment': [<numba.core.ir.Assign object at 0x000001C85FEC48E0>],
             'time_register': [<numba.core.ir.Assign object at 0x000001C85FEC8370>,
                               <numba.core.ir.Assign object at 0x000001C85FEEF400>],
             'weight': [<numba.core.ir.Assign object at 0x000001C85FECA370>,
                        <numba.core.ir.Assign object at 0x000001C85FEDBA60>,
                        <numba.core.ir.Assign object at 0x000001C85FEE9C40>],
             'x': [<numba.core.ir.Assign object at 0x000001C85FE82160>],
             'y': [<numba.core.ir.Assign object at 0x000001C85FE82A30>]})
DEBUG:numba.core.ssa:SSA violators {'frac', 'j', 'weight', 'offset', 'index_frac', 'time_register', 'n', 'eta'}
DEBUG:numba.core.ssa:Fix SSA violator on var frac
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: frac
DEBUG:numba.core.ssa:replaced with: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:replaced with: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac
DEBUG:numba.core.ssa:on stmt: frac = $284binary_subtract.3
DEBUG:numba.core.ssa:replaced with: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: j = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001C85FEEFA30>],
             112: [<numba.core.ir.Assign object at 0x000001C85FEEFE20>],
             280: [<numba.core.ir.Assign object at 0x000001C85FF09B50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:find_def var='frac' stmt=index_frac = frac * num_table
DEBUG:numba.core.ssa:replaced with: index_frac = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac
DEBUG:numba.core.ssa:find_def var='frac' stmt=$284binary_subtract.3 = scale - frac
DEBUG:numba.core.ssa:find_def_from_top label 280
DEBUG:numba.core.ssa:idom 188 from label 280
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 112 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:replaced with: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:find_def var='frac' stmt=index_frac = frac * num_table
DEBUG:numba.core.ssa:replaced with: index_frac = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: j = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var j
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:first assign: j
DEBUG:numba.core.ssa:replaced with: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: j = $phi396.3
DEBUG:numba.core.ssa:replaced with: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {238: [<numba.core.ir.Assign object at 0x000001C85FEEFD90>],
             396: [<numba.core.ir.Assign object at 0x000001C85FF09C10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:replaced with: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:replaced with: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFBB0>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var weight
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: weight
DEBUG:numba.core.ssa:replaced with: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:replaced with: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:replaced with: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001C85FEEFA60>],
             190: [<numba.core.ir.Assign object at 0x000001C85FEEFCA0>],
             348: [<numba.core.ir.Assign object at 0x000001C85FF09430>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight * $266binary_subscr.18
DEBUG:numba.core.ssa:find_def var='weight' stmt=$268binary_multiply.19 = weight * $266binary_subscr.18
DEBUG:numba.core.ssa:find_def_from_top label 238
DEBUG:numba.core.ssa:idom 236 from label 238
DEBUG:numba.core.ssa:find_def_from_bottom label 236
DEBUG:numba.core.ssa:find_def_from_top label 236
DEBUG:numba.core.ssa:idom 190 from label 236
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:replaced with: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight * $428binary_subscr.20
DEBUG:numba.core.ssa:find_def var='weight' stmt=$430binary_multiply.21 = weight * $428binary_subscr.20
DEBUG:numba.core.ssa:find_def_from_top label 396
DEBUG:numba.core.ssa:idom 394 from label 396
DEBUG:numba.core.ssa:find_def_from_bottom label 394
DEBUG:numba.core.ssa:find_def_from_top label 394
DEBUG:numba.core.ssa:idom 348 from label 394
DEBUG:numba.core.ssa:find_def_from_bottom label 348
DEBUG:numba.core.ssa:replaced with: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09FD0>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var offset
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:first assign: offset
DEBUG:numba.core.ssa:replaced with: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:replaced with: offset.1 = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:replaced with: offset.2 = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A550>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001C85FE7A520>],
             112: [<numba.core.ir.Assign object at 0x000001C85FEEFD30>],
             280: [<numba.core.ir.Assign object at 0x000001C85FF09580>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:find_def var='offset' stmt=eta = index_frac - offset
DEBUG:numba.core.ssa:replaced with: eta = index_frac - offset.1
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset
DEBUG:numba.core.ssa:find_def var='offset' stmt=$170binary_subtract.25 = nwin - offset
DEBUG:numba.core.ssa:replaced with: $170binary_subtract.25 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset + $200binary_multiply.7
DEBUG:numba.core.ssa:find_def var='offset' stmt=$202binary_add.8 = offset + $200binary_multiply.7
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 188 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 112 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:replaced with: $202binary_add.8 = offset.1 + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset + $216binary_multiply.15
DEBUG:numba.core.ssa:find_def var='offset' stmt=$218binary_add.16 = offset + $216binary_multiply.15
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 188 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 112 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:replaced with: $218binary_add.16 = offset.1 + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:find_def var='offset' stmt=eta = index_frac - offset
DEBUG:numba.core.ssa:replaced with: eta = index_frac - offset.2
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset
DEBUG:numba.core.ssa:find_def var='offset' stmt=$328binary_subtract.21 = nwin - offset
DEBUG:numba.core.ssa:replaced with: $328binary_subtract.21 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset + $358binary_multiply.7
DEBUG:numba.core.ssa:find_def var='offset' stmt=$360binary_add.8 = offset + $358binary_multiply.7
DEBUG:numba.core.ssa:find_def_from_top label 348
DEBUG:numba.core.ssa:idom 346 from label 348
DEBUG:numba.core.ssa:find_def_from_bottom label 346
DEBUG:numba.core.ssa:find_def_from_top label 346
DEBUG:numba.core.ssa:idom 280 from label 346
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:replaced with: $360binary_add.8 = offset.2 + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset + $374binary_multiply.15
DEBUG:numba.core.ssa:find_def var='offset' stmt=$376binary_add.16 = offset + $374binary_multiply.15
DEBUG:numba.core.ssa:find_def_from_top label 348
DEBUG:numba.core.ssa:idom 346 from label 348
DEBUG:numba.core.ssa:find_def_from_bottom label 346
DEBUG:numba.core.ssa:find_def_from_top label 346
DEBUG:numba.core.ssa:idom 280 from label 346
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:replaced with: $376binary_add.16 = offset.2 + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FEEFFD0>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var index_frac
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: index_frac
DEBUG:numba.core.ssa:replaced with: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac = frac.1 * num_table
DEBUG:numba.core.ssa:replaced with: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset.1
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset.1 + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset.1 + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac.2 * num_table
DEBUG:numba.core.ssa:replaced with: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset.2
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset.2 + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset.2 + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7AD60>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001C85FE7AB50>],
             112: [<numba.core.ir.Assign object at 0x000001C85FEEFCD0>],
             280: [<numba.core.ir.Assign object at 0x000001C85FF15940>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:find_def var='index_frac' stmt=offset.1 = call $142load_global.13(index_frac, func=$142load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:replaced with: offset.1 = call $142load_global.13(index_frac.1, func=$142load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset.1
DEBUG:numba.core.ssa:find_def var='index_frac' stmt=eta = index_frac - offset.1
DEBUG:numba.core.ssa:replaced with: eta = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset.1 + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset.1 + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:find_def var='index_frac' stmt=offset.2 = call $296load_global.7(index_frac, func=$296load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:replaced with: offset.2 = call $296load_global.7(index_frac.2, func=$296load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset.2
DEBUG:numba.core.ssa:find_def var='index_frac' stmt=eta = index_frac - offset.2
DEBUG:numba.core.ssa:replaced with: eta = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset.2 + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset.2 + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15970>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var time_register
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: time_register
DEBUG:numba.core.ssa:replaced with: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $142load_global.13(index_frac.1, func=$142load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset.1 + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset.1 + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $296load_global.7(index_frac.2, func=$296load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset.2 + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset.2 + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register = $450inplace_add.3
DEBUG:numba.core.ssa:replaced with: time_register.1 = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF09E50>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001C85FF09310>],
             446: [<numba.core.ir.Assign object at 0x000001C85FF158E0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:find_def var='time_register' stmt=n = call $114load_global.2(time_register, func=$114load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 108 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:find_def_from_top label 108
DEBUG:numba.core.ssa:insert phi node time_register.2 = phi(incoming_values=[], incoming_blocks=[]) at 108
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def time_register = const(float, 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 446
DEBUG:numba.core.ssa:incoming_def time_register.1 = $450inplace_add.3
DEBUG:numba.core.ssa:replaced with: n = call $114load_global.2(time_register.2, func=$114load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:find_def var='time_register' stmt=$128binary_subtract.8 = time_register - n
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 108 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: $128binary_subtract.8 = time_register.2 - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $142load_global.13(index_frac.1, func=$142load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset.1 + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset.1 + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $296load_global.7(index_frac.2, func=$296load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset.2 + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset.2 + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='time_register' stmt=$450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 446
DEBUG:numba.core.ssa:idom 346 from label 446
DEBUG:numba.core.ssa:find_def_from_bottom label 346
DEBUG:numba.core.ssa:find_def_from_top label 346
DEBUG:numba.core.ssa:idom 280 from label 346
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:find_def_from_top label 280
DEBUG:numba.core.ssa:idom 188 from label 280
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 112 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 108 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 108
DEBUG:numba.core.ssa:replaced with: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register.1 = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF15AC0>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var n
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:first assign: n
DEBUG:numba.core.ssa:replaced with: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[0, 446])
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $114load_global.2(time_register.2, func=$114load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:replaced with: n.1 = call $114load_global.2(time_register.2, func=$114load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register.2 - n
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $142load_global.13(index_frac.1, func=$142load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset.1 + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset.1 + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $296load_global.7(index_frac.2, func=$296load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset.2 + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset.2 + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register.1 = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FE7A040>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001C85FEEFB20>],
             112: [<numba.core.ir.Assign object at 0x000001C85FF09FD0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[0, 446])
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $114load_global.2(time_register.2, func=$114load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register.2 - n
DEBUG:numba.core.ssa:find_def var='n' stmt=$128binary_subtract.8 = time_register.2 - n
DEBUG:numba.core.ssa:replaced with: $128binary_subtract.8 = time_register.2 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $142load_global.13(index_frac.1, func=$142load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:find_def var='n' stmt=$164binary_add.22 = n + $const162.21
DEBUG:numba.core.ssa:replaced with: $164binary_add.22 = n.1 + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset.1 + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset.1 + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:find_def var='n' stmt=$260binary_subtract.15 = n - i
DEBUG:numba.core.ssa:find_def_from_top label 238
DEBUG:numba.core.ssa:idom 236 from label 238
DEBUG:numba.core.ssa:find_def_from_bottom label 236
DEBUG:numba.core.ssa:find_def_from_top label 236
DEBUG:numba.core.ssa:idom 190 from label 236
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 188 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 112 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:replaced with: $260binary_subtract.15 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $296load_global.7(index_frac.2, func=$296load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:find_def var='n' stmt=$318binary_subtract.16 = n_orig - n
DEBUG:numba.core.ssa:find_def_from_top label 280
DEBUG:numba.core.ssa:idom 188 from label 280
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 112 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:replaced with: $318binary_subtract.16 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset.2 + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset.2 + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n + k
DEBUG:numba.core.ssa:find_def var='n' stmt=$418binary_add.15 = n + k
DEBUG:numba.core.ssa:find_def_from_top label 396
DEBUG:numba.core.ssa:idom 394 from label 396
DEBUG:numba.core.ssa:find_def_from_bottom label 394
DEBUG:numba.core.ssa:find_def_from_top label 394
DEBUG:numba.core.ssa:idom 348 from label 394
DEBUG:numba.core.ssa:find_def_from_bottom label 348
DEBUG:numba.core.ssa:find_def_from_top label 348
DEBUG:numba.core.ssa:idom 346 from label 348
DEBUG:numba.core.ssa:find_def_from_bottom label 346
DEBUG:numba.core.ssa:find_def_from_top label 346
DEBUG:numba.core.ssa:idom 280 from label 346
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:find_def_from_top label 280
DEBUG:numba.core.ssa:idom 188 from label 280
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 112 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:replaced with: $418binary_add.15 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register.1 = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF09370>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var eta
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: eta
DEBUG:numba.core.ssa:replaced with: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[0, 446])
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $114load_global.2(time_register.2, func=$114load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register.2 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $142load_global.13(index_frac.1, func=$142load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.1 - offset.1
DEBUG:numba.core.ssa:replaced with: eta.1 = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n.1 + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset.1 + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset.1 + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $296load_global.7(index_frac.2, func=$296load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.2 - offset.2
DEBUG:numba.core.ssa:replaced with: eta.2 = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset.2 + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset.2 + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register.1 = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x000001C85FF15730>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001C85FF15520>],
             112: [<numba.core.ir.Assign object at 0x000001C85FF15910>],
             280: [<numba.core.ir.Assign object at 0x000001C85FF09580>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: sample_ratio = arg(2, name=sample_ratio)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(3, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(4, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(5, name=num_table)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const12.4 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: time_increment = $const12.4 / sample_ratio
DEBUG:numba.core.ssa:on stmt: $20load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const74.25 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const84.29 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const94.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $100load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $104call_function.37 = call $100load_global.35(n_out, func=$100load_global.35, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106get_iter.38 = getiter(value=$104call_function.37)
DEBUG:numba.core.ssa:on stmt: $phi108.0 = $106get_iter.38
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 108
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[0, 446])
DEBUG:numba.core.ssa:on stmt: $108for_iter.1 = iternext(value=$phi108.0)
DEBUG:numba.core.ssa:on stmt: $108for_iter.2 = pair_first(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $108for_iter.3 = pair_second(value=$108for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi112.1 = $108for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $108for_iter.3, 112, 456
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: t = $phi112.1
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $114load_global.2(time_register.2, func=$114load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128binary_subtract.8 = time_register.2 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $128binary_subtract.8
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $142load_global.13 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $142load_global.13(index_frac.1, func=$142load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta.1 = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $158load_global.19 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const162.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $164binary_add.22 = n.1 + $const162.21
DEBUG:numba.core.ssa:on stmt: $170binary_subtract.25 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $174binary_floor_divide.27 = $170binary_subtract.25 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $158load_global.19($164binary_add.22, $174binary_floor_divide.27, func=$158load_global.19, args=[Var($164binary_add.22, interpn.py:42), Var($174binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $180load_global.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184call_function.31 = call $180load_global.29(i_max, func=$180load_global.29, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $186get_iter.32 = getiter(value=$184call_function.31)
DEBUG:numba.core.ssa:on stmt: $phi188.1 = $186get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: $188for_iter.2 = iternext(value=$phi188.1)
DEBUG:numba.core.ssa:on stmt: $188for_iter.3 = pair_first(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $188for_iter.4 = pair_second(value=$188for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi190.2 = $188for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $188for_iter.4, 190, 280
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: i = $phi190.2
DEBUG:numba.core.ssa:on stmt: $200binary_multiply.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $202binary_add.8 = offset.1 + $200binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $204binary_subscr.9 = getitem(value=interp_win, index=$202binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $218binary_add.16 = offset.1 + $216binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $220binary_subscr.17 = getitem(value=interp_delta, index=$218binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:find_def var='eta' stmt=$222binary_multiply.18 = eta * $220binary_subscr.17
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 188 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 112 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:replaced with: $222binary_multiply.18 = eta.1 * $220binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $204binary_subscr.9 + $222binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $228load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $232call_function.22 = call $228load_global.20(n_channels, func=$228load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $234get_iter.23 = getiter(value=$232call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi236.2 = $234get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 236
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: $236for_iter.3 = iternext(value=$phi236.2)
DEBUG:numba.core.ssa:on stmt: $236for_iter.4 = pair_first(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $236for_iter.5 = pair_second(value=$236for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi238.3 = $236for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $236for_iter.5, 238, 278
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: j = $phi238.3
DEBUG:numba.core.ssa:on stmt: $246build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $250binary_subscr.10 = getitem(value=y, index=$246build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $260binary_subtract.15 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $264build_tuple.17 = build_tuple(items=[Var($260binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
DEBUG:numba.core.ssa:on stmt: $266binary_subscr.18 = getitem(value=x, index=$264build_tuple.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $268binary_multiply.19 = weight.1 * $266binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $270inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$250binary_subscr.10, rhs=$268binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$246build_tuple.7] = $270inplace_add.20
DEBUG:numba.core.ssa:on stmt: jump 236
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 278
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 280
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $284binary_subtract.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $296load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $296load_global.7(index_frac.2, func=$296load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta.2 = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $312load_global.13 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $318binary_subtract.16 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const320.17 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $322binary_subtract.18 = $318binary_subtract.16 - $const320.17
DEBUG:numba.core.ssa:on stmt: $328binary_subtract.21 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $332binary_floor_divide.23 = $328binary_subtract.21 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $312load_global.13($322binary_subtract.18, $332binary_floor_divide.23, func=$312load_global.13, args=[Var($322binary_subtract.18, interpn.py:60), Var($332binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $338load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $342call_function.27 = call $338load_global.25(k_max, func=$338load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344get_iter.28 = getiter(value=$342call_function.27)
DEBUG:numba.core.ssa:on stmt: $phi346.1 = $344get_iter.28
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: $346for_iter.2 = iternext(value=$phi346.1)
DEBUG:numba.core.ssa:on stmt: $346for_iter.3 = pair_first(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $346for_iter.4 = pair_second(value=$346for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi348.2 = $346for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $346for_iter.4, 348, 446
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: k = $phi348.2
DEBUG:numba.core.ssa:on stmt: $358binary_multiply.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $360binary_add.8 = offset.2 + $358binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $362binary_subscr.9 = getitem(value=interp_win, index=$360binary_add.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $374binary_multiply.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $376binary_add.16 = offset.2 + $374binary_multiply.15
DEBUG:numba.core.ssa:on stmt: $378binary_subscr.17 = getitem(value=interp_delta, index=$376binary_add.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:find_def var='eta' stmt=$380binary_multiply.18 = eta * $378binary_subscr.17
DEBUG:numba.core.ssa:find_def_from_top label 348
DEBUG:numba.core.ssa:idom 346 from label 348
DEBUG:numba.core.ssa:find_def_from_bottom label 346
DEBUG:numba.core.ssa:find_def_from_top label 346
DEBUG:numba.core.ssa:idom 280 from label 346
DEBUG:numba.core.ssa:find_def_from_bottom label 280
DEBUG:numba.core.ssa:replaced with: $380binary_multiply.18 = eta.2 * $378binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $362binary_subscr.9 + $380binary_multiply.18
DEBUG:numba.core.ssa:on stmt: $386load_global.20 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $390call_function.22 = call $386load_global.20(n_channels, func=$386load_global.20, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $392get_iter.23 = getiter(value=$390call_function.22)
DEBUG:numba.core.ssa:on stmt: $phi394.2 = $392get_iter.23
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: $394for_iter.3 = iternext(value=$phi394.2)
DEBUG:numba.core.ssa:on stmt: $394for_iter.4 = pair_first(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $394for_iter.5 = pair_second(value=$394for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi396.3 = $394for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $394for_iter.5, 396, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 396
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi396.3
DEBUG:numba.core.ssa:on stmt: $404build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $408binary_subscr.10 = getitem(value=y, index=$404build_tuple.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $418binary_add.15 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const420.16 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $422binary_add.17 = $418binary_add.15 + $const420.16
DEBUG:numba.core.ssa:on stmt: $426build_tuple.19 = build_tuple(items=[Var($422binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
DEBUG:numba.core.ssa:on stmt: $428binary_subscr.20 = getitem(value=x, index=$426build_tuple.19, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $430binary_multiply.21 = weight.2 * $428binary_subscr.20
DEBUG:numba.core.ssa:on stmt: $432inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$408binary_subscr.10, rhs=$430binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[$404build_tuple.7] = $432inplace_add.22
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: jump 346
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 446
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: $450inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: time_register.1 = $450inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 108
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 456
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x000001C85FF10070>
DEBUG:numba.core.ssa:on stmt: $const456.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $458return_value.1 = cast(value=$const456.0)
DEBUG:numba.core.ssa:on stmt: return $458return_value.1
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gulim.ttc', name='Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\batang.ttc', name='Batang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\batang.ttc', name='Batang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gulim.ttc', name='Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C8601A7D30>
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gulim.ttc', name='Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\batang.ttc', name='Batang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\batang.ttc', name='Batang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gulim.ttc', name='Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gulim.ttc', name='Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\batang.ttc', name='Batang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GPRM.TTF', name='HYGraphic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMKMRHD.TTF', name='Headline R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2MJSM.TTF', name='HYSinMyeongJo-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2MJRE.TTF', name='HYMyeongJo-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMKMMAG.TTF', name='Magic R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\batang.ttc', name='Batang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2MKPB.TTF', name='HYPMokGak-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GTRM.TTF', name='HYGothic-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gulim.ttc', name='Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2GTRE.TTF', name='HYGothic-Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NGULIM.TTF', name='New Gulim', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMFMOLD.TTF', name='Yet R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORL.TTF', name='HYPost-Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2PORM.TTF', name='HYPost-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\H2GSRB.TTF', name='HYGungSo-Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMKMAMI.TTF', name='Ami R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2SA1M.TTF', name='HYShortSamul-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HMFMMUEX.TTC', name='MoeumT R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\H2HDRM.TTF', name='HYHeadLine-Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HMFMPYUN.TTF', name='Pyunji R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\astro\\anaconda3\\envs\\ae2\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C8605744C0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C864A52190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C864AE1610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C864CFDB20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C864F1CCA0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C864FD71C0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C86554EDC0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C864CD2FA0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C8605C2790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C8605FA880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C86001D670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C865555B50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C864388790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C864F48160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C8600EAD30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C864E8FAC0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C8643CE880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x000001C85F12AAC0>
